<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<bean id="captchaService"
		class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0">
			<ref bean="imageEngine" />
		</constructor-arg>
		<constructor-arg index="1">
			<value>180</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>180000</value>
		</constructor-arg>
		<constructor-arg type="int" index="3" value="75000" />
	</bean>
	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
		<constructor-arg index="0">
			<list>
				<ref bean="CaptchaFactory" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="CaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory">
		<constructor-arg>
			<ref bean="wordgen" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="wordtoimage" />
		</constructor-arg>
	</bean>

	<bean id="wordgen"
		class="com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator">
		<constructor-arg>
			<ref bean="filedict" />
		</constructor-arg>
	</bean>

	<bean id="filedict" class="com.octo.captcha.component.word.FileDictionary">
		<constructor-arg index="0">
			<value>toddlist</value>
		</constructor-arg>
	</bean>

	<bean id="wordtoimage"
		class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage">
		<constructor-arg index="0">
			<ref bean="fontGenRandom" />
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="backGenUni" />
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="simpleWhitePaster" />
		</constructor-arg>

	</bean>

	<bean id="fontGenRandom"
		class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
		<constructor-arg index="0">
			<value>20</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>24</value>
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<ref bean="fontCustomizer" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="fontCustomizer" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Arial</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>1</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>2</value>
		</constructor-arg>
	</bean>

	<bean id="backGenUni"
		class="com.octo.captcha.component.image.backgroundgenerator.FileReaderRandomBackgroundGenerator">
		<constructor-arg index="0">
			<value>106</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>28</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>#{
				T(com.liferay.portal.kernel.util.PropsUtil).get("parametros.jcaptcha.images")
				}</value>
		</constructor-arg>
	</bean>

	<bean id="simpleWhitePaster" class="com.octo.captcha.component.image.textpaster.NonLinearTextPaster">
		<constructor-arg type="java.lang.Integer" index="0">
			<value>5</value>
		</constructor-arg>
		<constructor-arg type="java.lang.Integer" index="1">
			<value>5</value>
		</constructor-arg>
		<constructor-arg type="java.awt.Color" index="2">
			<ref bean="colorGreen" />
		</constructor-arg>
	</bean>

	<bean id="colorGreen" class="pe.com.ibk.halcon.utils.jCaptcha.CaptchaColor">
		<constructor-arg index="0" type="int">
			<value>105</value>
		</constructor-arg>
		<constructor-arg index="1" type="int">
			<value>105</value>
		</constructor-arg>
		<constructor-arg index="2" type="int">
			<value>105</value>
		</constructor-arg>
	</bean>

</beans>  