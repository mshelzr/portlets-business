/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.Pais;
import com.ext.portlet.halcon.model.PaisModel;
import com.ext.portlet.halcon.model.PaisSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Pais service. Represents a row in the &quot;T_PAIS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.PaisModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaisImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see PaisImpl
 * @see com.ext.portlet.halcon.model.Pais
 * @see com.ext.portlet.halcon.model.PaisModel
 * @generated
 */
@JSON(strict = true)
public class PaisModelImpl extends BaseModelImpl<Pais> implements PaisModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pais model instance should use the {@link com.ext.portlet.halcon.model.Pais} interface instead.
	 */
	public static final String TABLE_NAME = "T_PAIS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "pais_IdPais", Types.BIGINT },
			{ "pais_Codigo", Types.VARCHAR },
			{ "pais_Nombre", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table T_PAIS (pais_IdPais LONG not null primary key IDENTITY,pais_Codigo VARCHAR(75) null,pais_Nombre VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table T_PAIS";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.Pais"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.Pais"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Pais toModel(PaisSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Pais model = new PaisImpl();

		model.setPais_IdPais(soapModel.getPais_IdPais());
		model.setCodigo(soapModel.getCodigo());
		model.setNombre(soapModel.getNombre());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Pais> toModels(PaisSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Pais> models = new ArrayList<Pais>(soapModels.length);

		for (PaisSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.Pais"));

	public PaisModelImpl() {
	}

	public long getPrimaryKey() {
		return _pais_IdPais;
	}

	public void setPrimaryKey(long primaryKey) {
		setPais_IdPais(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_pais_IdPais);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Pais.class;
	}

	public String getModelClassName() {
		return Pais.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("pais_IdPais", getPais_IdPais());
		attributes.put("codigo", getCodigo());
		attributes.put("nombre", getNombre());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long pais_IdPais = (Long)attributes.get("pais_IdPais");

		if (pais_IdPais != null) {
			setPais_IdPais(pais_IdPais);
		}

		String codigo = (String)attributes.get("codigo");

		if (codigo != null) {
			setCodigo(codigo);
		}

		String nombre = (String)attributes.get("nombre");

		if (nombre != null) {
			setNombre(nombre);
		}
	}

	@JSON
	public long getPais_IdPais() {
		return _pais_IdPais;
	}

	public void setPais_IdPais(long pais_IdPais) {
		_pais_IdPais = pais_IdPais;
	}

	@JSON
	public String getCodigo() {
		if (_codigo == null) {
			return StringPool.BLANK;
		}
		else {
			return _codigo;
		}
	}

	public void setCodigo(String codigo) {
		_codigo = codigo;
	}

	@JSON
	public String getNombre() {
		if (_nombre == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombre;
		}
	}

	public void setNombre(String nombre) {
		_nombre = nombre;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Pais.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Pais toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Pais)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		PaisImpl paisImpl = new PaisImpl();

		paisImpl.setPais_IdPais(getPais_IdPais());
		paisImpl.setCodigo(getCodigo());
		paisImpl.setNombre(getNombre());

		paisImpl.resetOriginalValues();

		return paisImpl;
	}

	public int compareTo(Pais pais) {
		long primaryKey = pais.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Pais pais = null;

		try {
			pais = (Pais)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = pais.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Pais> toCacheModel() {
		PaisCacheModel paisCacheModel = new PaisCacheModel();

		paisCacheModel.pais_IdPais = getPais_IdPais();

		paisCacheModel.codigo = getCodigo();

		String codigo = paisCacheModel.codigo;

		if ((codigo != null) && (codigo.length() == 0)) {
			paisCacheModel.codigo = null;
		}

		paisCacheModel.nombre = getNombre();

		String nombre = paisCacheModel.nombre;

		if ((nombre != null) && (nombre.length() == 0)) {
			paisCacheModel.nombre = null;
		}

		return paisCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{pais_IdPais=");
		sb.append(getPais_IdPais());
		sb.append(", codigo=");
		sb.append(getCodigo());
		sb.append(", nombre=");
		sb.append(getNombre());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.Pais");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>pais_IdPais</column-name><column-value><![CDATA[");
		sb.append(getPais_IdPais());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigo</column-name><column-value><![CDATA[");
		sb.append(getCodigo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombre</column-name><column-value><![CDATA[");
		sb.append(getNombre());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Pais.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Pais.class
		};
	private long _pais_IdPais;
	private String _codigo;
	private String _nombre;
	private Pais _escapedModelProxy;
}