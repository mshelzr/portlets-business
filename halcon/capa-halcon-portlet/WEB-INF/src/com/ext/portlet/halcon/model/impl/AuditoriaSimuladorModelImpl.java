/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.AuditoriaSimulador;
import com.ext.portlet.halcon.model.AuditoriaSimuladorModel;
import com.ext.portlet.halcon.model.AuditoriaSimuladorSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AuditoriaSimulador service. Represents a row in the &quot;T_AUDITORIA_SIMULADOR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.AuditoriaSimuladorModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditoriaSimuladorImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see AuditoriaSimuladorImpl
 * @see com.ext.portlet.halcon.model.AuditoriaSimulador
 * @see com.ext.portlet.halcon.model.AuditoriaSimuladorModel
 * @generated
 */
@JSON(strict = true)
public class AuditoriaSimuladorModelImpl extends BaseModelImpl<AuditoriaSimulador>
	implements AuditoriaSimuladorModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a auditoria simulador model instance should use the {@link com.ext.portlet.halcon.model.AuditoriaSimulador} interface instead.
	 */
	public static final String TABLE_NAME = "T_AUDITORIA_SIMULADOR";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ausm_IdAuditoriaSim", Types.BIGINT },
			{ "ausm_TipoSimulador", Types.VARCHAR },
			{ "ausm_IdTransaccion", Types.VARCHAR },
			{ "ausm_TipoDocumento", Types.VARCHAR },
			{ "ausm_NumeroDocumento", Types.VARCHAR },
			{ "ausm_Moneda", Types.VARCHAR },
			{ "ausm_TipoProducto", Types.VARCHAR },
			{ "ausm_InvirtioFondMut", Types.VARCHAR },
			{ "ausm_NivelConocimFondMut", Types.VARCHAR },
			{ "ausm_ReaccionVarMerc", Types.VARCHAR },
			{ "ausm_ValorBien", Types.DOUBLE },
			{ "ausm_MontoPrestamo", Types.DOUBLE },
			{ "ausm_CuotaInicial", Types.DOUBLE },
			{ "ausm_PeriodoInvers", Types.VARCHAR },
			{ "ausm_Tasa", Types.DOUBLE },
			{ "ausm_SegDesgrav", Types.VARCHAR },
			{ "ausm_TipoCuota", Types.VARCHAR },
			{ "ausm_IP", Types.VARCHAR },
			{ "ausm_FechaHora", Types.TIMESTAMP },
			{ "ausm_UTMSource", Types.VARCHAR },
			{ "ausm_UTMMedium", Types.VARCHAR },
			{ "ausm_UTMCampaing", Types.VARCHAR },
			{ "ausm_UTMContent", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table T_AUDITORIA_SIMULADOR (ausm_IdAuditoriaSim LONG not null primary key IDENTITY,ausm_TipoSimulador VARCHAR(75) null,ausm_IdTransaccion VARCHAR(75) null,ausm_TipoDocumento VARCHAR(75) null,ausm_NumeroDocumento VARCHAR(75) null,ausm_Moneda VARCHAR(75) null,ausm_TipoProducto VARCHAR(75) null,ausm_InvirtioFondMut VARCHAR(75) null,ausm_NivelConocimFondMut VARCHAR(75) null,ausm_ReaccionVarMerc VARCHAR(75) null,ausm_ValorBien DOUBLE,ausm_MontoPrestamo DOUBLE,ausm_CuotaInicial DOUBLE,ausm_PeriodoInvers VARCHAR(75) null,ausm_Tasa DOUBLE,ausm_SegDesgrav VARCHAR(75) null,ausm_TipoCuota VARCHAR(75) null,ausm_IP VARCHAR(75) null,ausm_FechaHora DATE null,ausm_UTMSource VARCHAR(75) null,ausm_UTMMedium VARCHAR(75) null,ausm_UTMCampaing VARCHAR(75) null,ausm_UTMContent VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table T_AUDITORIA_SIMULADOR";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.AuditoriaSimulador"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.AuditoriaSimulador"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AuditoriaSimulador toModel(AuditoriaSimuladorSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AuditoriaSimulador model = new AuditoriaSimuladorImpl();

		model.setIdAuditoriaSim(soapModel.getIdAuditoriaSim());
		model.setTipoSimulador(soapModel.getTipoSimulador());
		model.setIdTransaccion(soapModel.getIdTransaccion());
		model.setTipoDocumento(soapModel.getTipoDocumento());
		model.setNumDocumento(soapModel.getNumDocumento());
		model.setMoneda(soapModel.getMoneda());
		model.setTipoProducto(soapModel.getTipoProducto());
		model.setInvirtioFondMut(soapModel.getInvirtioFondMut());
		model.setNivelConocimFondMut(soapModel.getNivelConocimFondMut());
		model.setReaccionVarMerc(soapModel.getReaccionVarMerc());
		model.setValorBien(soapModel.getValorBien());
		model.setMontoPrestamo(soapModel.getMontoPrestamo());
		model.setCuotaInicial(soapModel.getCuotaInicial());
		model.setPeriodoInvers(soapModel.getPeriodoInvers());
		model.setTasa(soapModel.getTasa());
		model.setSegDesgrav(soapModel.getSegDesgrav());
		model.setTipoCuota(soapModel.getTipoCuota());
		model.setIP(soapModel.getIP());
		model.setFechaHora(soapModel.getFechaHora());
		model.setUTMSource(soapModel.getUTMSource());
		model.setUTMMedium(soapModel.getUTMMedium());
		model.setUTMCampaing(soapModel.getUTMCampaing());
		model.setUTMContent(soapModel.getUTMContent());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AuditoriaSimulador> toModels(
		AuditoriaSimuladorSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AuditoriaSimulador> models = new ArrayList<AuditoriaSimulador>(soapModels.length);

		for (AuditoriaSimuladorSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.AuditoriaSimulador"));

	public AuditoriaSimuladorModelImpl() {
	}

	public long getPrimaryKey() {
		return _idAuditoriaSim;
	}

	public void setPrimaryKey(long primaryKey) {
		setIdAuditoriaSim(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_idAuditoriaSim);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return AuditoriaSimulador.class;
	}

	public String getModelClassName() {
		return AuditoriaSimulador.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idAuditoriaSim", getIdAuditoriaSim());
		attributes.put("tipoSimulador", getTipoSimulador());
		attributes.put("idTransaccion", getIdTransaccion());
		attributes.put("tipoDocumento", getTipoDocumento());
		attributes.put("numDocumento", getNumDocumento());
		attributes.put("moneda", getMoneda());
		attributes.put("tipoProducto", getTipoProducto());
		attributes.put("invirtioFondMut", getInvirtioFondMut());
		attributes.put("nivelConocimFondMut", getNivelConocimFondMut());
		attributes.put("reaccionVarMerc", getReaccionVarMerc());
		attributes.put("valorBien", getValorBien());
		attributes.put("montoPrestamo", getMontoPrestamo());
		attributes.put("cuotaInicial", getCuotaInicial());
		attributes.put("periodoInvers", getPeriodoInvers());
		attributes.put("tasa", getTasa());
		attributes.put("segDesgrav", getSegDesgrav());
		attributes.put("tipoCuota", getTipoCuota());
		attributes.put("IP", getIP());
		attributes.put("fechaHora", getFechaHora());
		attributes.put("UTMSource", getUTMSource());
		attributes.put("UTMMedium", getUTMMedium());
		attributes.put("UTMCampaing", getUTMCampaing());
		attributes.put("UTMContent", getUTMContent());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idAuditoriaSim = (Long)attributes.get("idAuditoriaSim");

		if (idAuditoriaSim != null) {
			setIdAuditoriaSim(idAuditoriaSim);
		}

		String tipoSimulador = (String)attributes.get("tipoSimulador");

		if (tipoSimulador != null) {
			setTipoSimulador(tipoSimulador);
		}

		String idTransaccion = (String)attributes.get("idTransaccion");

		if (idTransaccion != null) {
			setIdTransaccion(idTransaccion);
		}

		String tipoDocumento = (String)attributes.get("tipoDocumento");

		if (tipoDocumento != null) {
			setTipoDocumento(tipoDocumento);
		}

		String numDocumento = (String)attributes.get("numDocumento");

		if (numDocumento != null) {
			setNumDocumento(numDocumento);
		}

		String moneda = (String)attributes.get("moneda");

		if (moneda != null) {
			setMoneda(moneda);
		}

		String tipoProducto = (String)attributes.get("tipoProducto");

		if (tipoProducto != null) {
			setTipoProducto(tipoProducto);
		}

		String invirtioFondMut = (String)attributes.get("invirtioFondMut");

		if (invirtioFondMut != null) {
			setInvirtioFondMut(invirtioFondMut);
		}

		String nivelConocimFondMut = (String)attributes.get(
				"nivelConocimFondMut");

		if (nivelConocimFondMut != null) {
			setNivelConocimFondMut(nivelConocimFondMut);
		}

		String reaccionVarMerc = (String)attributes.get("reaccionVarMerc");

		if (reaccionVarMerc != null) {
			setReaccionVarMerc(reaccionVarMerc);
		}

		Double valorBien = (Double)attributes.get("valorBien");

		if (valorBien != null) {
			setValorBien(valorBien);
		}

		Double montoPrestamo = (Double)attributes.get("montoPrestamo");

		if (montoPrestamo != null) {
			setMontoPrestamo(montoPrestamo);
		}

		Double cuotaInicial = (Double)attributes.get("cuotaInicial");

		if (cuotaInicial != null) {
			setCuotaInicial(cuotaInicial);
		}

		String periodoInvers = (String)attributes.get("periodoInvers");

		if (periodoInvers != null) {
			setPeriodoInvers(periodoInvers);
		}

		Double tasa = (Double)attributes.get("tasa");

		if (tasa != null) {
			setTasa(tasa);
		}

		String segDesgrav = (String)attributes.get("segDesgrav");

		if (segDesgrav != null) {
			setSegDesgrav(segDesgrav);
		}

		String tipoCuota = (String)attributes.get("tipoCuota");

		if (tipoCuota != null) {
			setTipoCuota(tipoCuota);
		}

		String IP = (String)attributes.get("IP");

		if (IP != null) {
			setIP(IP);
		}

		Date fechaHora = (Date)attributes.get("fechaHora");

		if (fechaHora != null) {
			setFechaHora(fechaHora);
		}

		String UTMSource = (String)attributes.get("UTMSource");

		if (UTMSource != null) {
			setUTMSource(UTMSource);
		}

		String UTMMedium = (String)attributes.get("UTMMedium");

		if (UTMMedium != null) {
			setUTMMedium(UTMMedium);
		}

		String UTMCampaing = (String)attributes.get("UTMCampaing");

		if (UTMCampaing != null) {
			setUTMCampaing(UTMCampaing);
		}

		String UTMContent = (String)attributes.get("UTMContent");

		if (UTMContent != null) {
			setUTMContent(UTMContent);
		}
	}

	@JSON
	public long getIdAuditoriaSim() {
		return _idAuditoriaSim;
	}

	public void setIdAuditoriaSim(long idAuditoriaSim) {
		_idAuditoriaSim = idAuditoriaSim;
	}

	@JSON
	public String getTipoSimulador() {
		if (_tipoSimulador == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoSimulador;
		}
	}

	public void setTipoSimulador(String tipoSimulador) {
		_tipoSimulador = tipoSimulador;
	}

	@JSON
	public String getIdTransaccion() {
		if (_idTransaccion == null) {
			return StringPool.BLANK;
		}
		else {
			return _idTransaccion;
		}
	}

	public void setIdTransaccion(String idTransaccion) {
		_idTransaccion = idTransaccion;
	}

	@JSON
	public String getTipoDocumento() {
		if (_tipoDocumento == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoDocumento;
		}
	}

	public void setTipoDocumento(String tipoDocumento) {
		_tipoDocumento = tipoDocumento;
	}

	@JSON
	public String getNumDocumento() {
		if (_numDocumento == null) {
			return StringPool.BLANK;
		}
		else {
			return _numDocumento;
		}
	}

	public void setNumDocumento(String numDocumento) {
		_numDocumento = numDocumento;
	}

	@JSON
	public String getMoneda() {
		if (_moneda == null) {
			return StringPool.BLANK;
		}
		else {
			return _moneda;
		}
	}

	public void setMoneda(String moneda) {
		_moneda = moneda;
	}

	@JSON
	public String getTipoProducto() {
		if (_tipoProducto == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoProducto;
		}
	}

	public void setTipoProducto(String tipoProducto) {
		_tipoProducto = tipoProducto;
	}

	@JSON
	public String getInvirtioFondMut() {
		if (_invirtioFondMut == null) {
			return StringPool.BLANK;
		}
		else {
			return _invirtioFondMut;
		}
	}

	public void setInvirtioFondMut(String invirtioFondMut) {
		_invirtioFondMut = invirtioFondMut;
	}

	@JSON
	public String getNivelConocimFondMut() {
		if (_nivelConocimFondMut == null) {
			return StringPool.BLANK;
		}
		else {
			return _nivelConocimFondMut;
		}
	}

	public void setNivelConocimFondMut(String nivelConocimFondMut) {
		_nivelConocimFondMut = nivelConocimFondMut;
	}

	@JSON
	public String getReaccionVarMerc() {
		if (_reaccionVarMerc == null) {
			return StringPool.BLANK;
		}
		else {
			return _reaccionVarMerc;
		}
	}

	public void setReaccionVarMerc(String reaccionVarMerc) {
		_reaccionVarMerc = reaccionVarMerc;
	}

	@JSON
	public Double getValorBien() {
		return _valorBien;
	}

	public void setValorBien(Double valorBien) {
		_valorBien = valorBien;
	}

	@JSON
	public Double getMontoPrestamo() {
		return _montoPrestamo;
	}

	public void setMontoPrestamo(Double montoPrestamo) {
		_montoPrestamo = montoPrestamo;
	}

	@JSON
	public Double getCuotaInicial() {
		return _cuotaInicial;
	}

	public void setCuotaInicial(Double cuotaInicial) {
		_cuotaInicial = cuotaInicial;
	}

	@JSON
	public String getPeriodoInvers() {
		if (_periodoInvers == null) {
			return StringPool.BLANK;
		}
		else {
			return _periodoInvers;
		}
	}

	public void setPeriodoInvers(String periodoInvers) {
		_periodoInvers = periodoInvers;
	}

	@JSON
	public Double getTasa() {
		return _tasa;
	}

	public void setTasa(Double tasa) {
		_tasa = tasa;
	}

	@JSON
	public String getSegDesgrav() {
		if (_segDesgrav == null) {
			return StringPool.BLANK;
		}
		else {
			return _segDesgrav;
		}
	}

	public void setSegDesgrav(String segDesgrav) {
		_segDesgrav = segDesgrav;
	}

	@JSON
	public String getTipoCuota() {
		if (_tipoCuota == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoCuota;
		}
	}

	public void setTipoCuota(String tipoCuota) {
		_tipoCuota = tipoCuota;
	}

	@JSON
	public String getIP() {
		if (_IP == null) {
			return StringPool.BLANK;
		}
		else {
			return _IP;
		}
	}

	public void setIP(String IP) {
		_IP = IP;
	}

	@JSON
	public Date getFechaHora() {
		return _fechaHora;
	}

	public void setFechaHora(Date fechaHora) {
		_fechaHora = fechaHora;
	}

	@JSON
	public String getUTMSource() {
		if (_UTMSource == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMSource;
		}
	}

	public void setUTMSource(String UTMSource) {
		_UTMSource = UTMSource;
	}

	@JSON
	public String getUTMMedium() {
		if (_UTMMedium == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMMedium;
		}
	}

	public void setUTMMedium(String UTMMedium) {
		_UTMMedium = UTMMedium;
	}

	@JSON
	public String getUTMCampaing() {
		if (_UTMCampaing == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMCampaing;
		}
	}

	public void setUTMCampaing(String UTMCampaing) {
		_UTMCampaing = UTMCampaing;
	}

	@JSON
	public String getUTMContent() {
		if (_UTMContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMContent;
		}
	}

	public void setUTMContent(String UTMContent) {
		_UTMContent = UTMContent;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AuditoriaSimulador.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AuditoriaSimulador toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (AuditoriaSimulador)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		AuditoriaSimuladorImpl auditoriaSimuladorImpl = new AuditoriaSimuladorImpl();

		auditoriaSimuladorImpl.setIdAuditoriaSim(getIdAuditoriaSim());
		auditoriaSimuladorImpl.setTipoSimulador(getTipoSimulador());
		auditoriaSimuladorImpl.setIdTransaccion(getIdTransaccion());
		auditoriaSimuladorImpl.setTipoDocumento(getTipoDocumento());
		auditoriaSimuladorImpl.setNumDocumento(getNumDocumento());
		auditoriaSimuladorImpl.setMoneda(getMoneda());
		auditoriaSimuladorImpl.setTipoProducto(getTipoProducto());
		auditoriaSimuladorImpl.setInvirtioFondMut(getInvirtioFondMut());
		auditoriaSimuladorImpl.setNivelConocimFondMut(getNivelConocimFondMut());
		auditoriaSimuladorImpl.setReaccionVarMerc(getReaccionVarMerc());
		auditoriaSimuladorImpl.setValorBien(getValorBien());
		auditoriaSimuladorImpl.setMontoPrestamo(getMontoPrestamo());
		auditoriaSimuladorImpl.setCuotaInicial(getCuotaInicial());
		auditoriaSimuladorImpl.setPeriodoInvers(getPeriodoInvers());
		auditoriaSimuladorImpl.setTasa(getTasa());
		auditoriaSimuladorImpl.setSegDesgrav(getSegDesgrav());
		auditoriaSimuladorImpl.setTipoCuota(getTipoCuota());
		auditoriaSimuladorImpl.setIP(getIP());
		auditoriaSimuladorImpl.setFechaHora(getFechaHora());
		auditoriaSimuladorImpl.setUTMSource(getUTMSource());
		auditoriaSimuladorImpl.setUTMMedium(getUTMMedium());
		auditoriaSimuladorImpl.setUTMCampaing(getUTMCampaing());
		auditoriaSimuladorImpl.setUTMContent(getUTMContent());

		auditoriaSimuladorImpl.resetOriginalValues();

		return auditoriaSimuladorImpl;
	}

	public int compareTo(AuditoriaSimulador auditoriaSimulador) {
		long primaryKey = auditoriaSimulador.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		AuditoriaSimulador auditoriaSimulador = null;

		try {
			auditoriaSimulador = (AuditoriaSimulador)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = auditoriaSimulador.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<AuditoriaSimulador> toCacheModel() {
		AuditoriaSimuladorCacheModel auditoriaSimuladorCacheModel = new AuditoriaSimuladorCacheModel();

		auditoriaSimuladorCacheModel.idAuditoriaSim = getIdAuditoriaSim();

		auditoriaSimuladorCacheModel.tipoSimulador = getTipoSimulador();

		String tipoSimulador = auditoriaSimuladorCacheModel.tipoSimulador;

		if ((tipoSimulador != null) && (tipoSimulador.length() == 0)) {
			auditoriaSimuladorCacheModel.tipoSimulador = null;
		}

		auditoriaSimuladorCacheModel.idTransaccion = getIdTransaccion();

		String idTransaccion = auditoriaSimuladorCacheModel.idTransaccion;

		if ((idTransaccion != null) && (idTransaccion.length() == 0)) {
			auditoriaSimuladorCacheModel.idTransaccion = null;
		}

		auditoriaSimuladorCacheModel.tipoDocumento = getTipoDocumento();

		String tipoDocumento = auditoriaSimuladorCacheModel.tipoDocumento;

		if ((tipoDocumento != null) && (tipoDocumento.length() == 0)) {
			auditoriaSimuladorCacheModel.tipoDocumento = null;
		}

		auditoriaSimuladorCacheModel.numDocumento = getNumDocumento();

		String numDocumento = auditoriaSimuladorCacheModel.numDocumento;

		if ((numDocumento != null) && (numDocumento.length() == 0)) {
			auditoriaSimuladorCacheModel.numDocumento = null;
		}

		auditoriaSimuladorCacheModel.moneda = getMoneda();

		String moneda = auditoriaSimuladorCacheModel.moneda;

		if ((moneda != null) && (moneda.length() == 0)) {
			auditoriaSimuladorCacheModel.moneda = null;
		}

		auditoriaSimuladorCacheModel.tipoProducto = getTipoProducto();

		String tipoProducto = auditoriaSimuladorCacheModel.tipoProducto;

		if ((tipoProducto != null) && (tipoProducto.length() == 0)) {
			auditoriaSimuladorCacheModel.tipoProducto = null;
		}

		auditoriaSimuladorCacheModel.invirtioFondMut = getInvirtioFondMut();

		String invirtioFondMut = auditoriaSimuladorCacheModel.invirtioFondMut;

		if ((invirtioFondMut != null) && (invirtioFondMut.length() == 0)) {
			auditoriaSimuladorCacheModel.invirtioFondMut = null;
		}

		auditoriaSimuladorCacheModel.nivelConocimFondMut = getNivelConocimFondMut();

		String nivelConocimFondMut = auditoriaSimuladorCacheModel.nivelConocimFondMut;

		if ((nivelConocimFondMut != null) &&
				(nivelConocimFondMut.length() == 0)) {
			auditoriaSimuladorCacheModel.nivelConocimFondMut = null;
		}

		auditoriaSimuladorCacheModel.reaccionVarMerc = getReaccionVarMerc();

		String reaccionVarMerc = auditoriaSimuladorCacheModel.reaccionVarMerc;

		if ((reaccionVarMerc != null) && (reaccionVarMerc.length() == 0)) {
			auditoriaSimuladorCacheModel.reaccionVarMerc = null;
		}

		auditoriaSimuladorCacheModel.valorBien = getValorBien();

		auditoriaSimuladorCacheModel.montoPrestamo = getMontoPrestamo();

		auditoriaSimuladorCacheModel.cuotaInicial = getCuotaInicial();

		auditoriaSimuladorCacheModel.periodoInvers = getPeriodoInvers();

		String periodoInvers = auditoriaSimuladorCacheModel.periodoInvers;

		if ((periodoInvers != null) && (periodoInvers.length() == 0)) {
			auditoriaSimuladorCacheModel.periodoInvers = null;
		}

		auditoriaSimuladorCacheModel.tasa = getTasa();

		auditoriaSimuladorCacheModel.segDesgrav = getSegDesgrav();

		String segDesgrav = auditoriaSimuladorCacheModel.segDesgrav;

		if ((segDesgrav != null) && (segDesgrav.length() == 0)) {
			auditoriaSimuladorCacheModel.segDesgrav = null;
		}

		auditoriaSimuladorCacheModel.tipoCuota = getTipoCuota();

		String tipoCuota = auditoriaSimuladorCacheModel.tipoCuota;

		if ((tipoCuota != null) && (tipoCuota.length() == 0)) {
			auditoriaSimuladorCacheModel.tipoCuota = null;
		}

		auditoriaSimuladorCacheModel.IP = getIP();

		String IP = auditoriaSimuladorCacheModel.IP;

		if ((IP != null) && (IP.length() == 0)) {
			auditoriaSimuladorCacheModel.IP = null;
		}

		Date fechaHora = getFechaHora();

		if (fechaHora != null) {
			auditoriaSimuladorCacheModel.fechaHora = fechaHora.getTime();
		}
		else {
			auditoriaSimuladorCacheModel.fechaHora = Long.MIN_VALUE;
		}

		auditoriaSimuladorCacheModel.UTMSource = getUTMSource();

		String UTMSource = auditoriaSimuladorCacheModel.UTMSource;

		if ((UTMSource != null) && (UTMSource.length() == 0)) {
			auditoriaSimuladorCacheModel.UTMSource = null;
		}

		auditoriaSimuladorCacheModel.UTMMedium = getUTMMedium();

		String UTMMedium = auditoriaSimuladorCacheModel.UTMMedium;

		if ((UTMMedium != null) && (UTMMedium.length() == 0)) {
			auditoriaSimuladorCacheModel.UTMMedium = null;
		}

		auditoriaSimuladorCacheModel.UTMCampaing = getUTMCampaing();

		String UTMCampaing = auditoriaSimuladorCacheModel.UTMCampaing;

		if ((UTMCampaing != null) && (UTMCampaing.length() == 0)) {
			auditoriaSimuladorCacheModel.UTMCampaing = null;
		}

		auditoriaSimuladorCacheModel.UTMContent = getUTMContent();

		String UTMContent = auditoriaSimuladorCacheModel.UTMContent;

		if ((UTMContent != null) && (UTMContent.length() == 0)) {
			auditoriaSimuladorCacheModel.UTMContent = null;
		}

		return auditoriaSimuladorCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{idAuditoriaSim=");
		sb.append(getIdAuditoriaSim());
		sb.append(", tipoSimulador=");
		sb.append(getTipoSimulador());
		sb.append(", idTransaccion=");
		sb.append(getIdTransaccion());
		sb.append(", tipoDocumento=");
		sb.append(getTipoDocumento());
		sb.append(", numDocumento=");
		sb.append(getNumDocumento());
		sb.append(", moneda=");
		sb.append(getMoneda());
		sb.append(", tipoProducto=");
		sb.append(getTipoProducto());
		sb.append(", invirtioFondMut=");
		sb.append(getInvirtioFondMut());
		sb.append(", nivelConocimFondMut=");
		sb.append(getNivelConocimFondMut());
		sb.append(", reaccionVarMerc=");
		sb.append(getReaccionVarMerc());
		sb.append(", valorBien=");
		sb.append(getValorBien());
		sb.append(", montoPrestamo=");
		sb.append(getMontoPrestamo());
		sb.append(", cuotaInicial=");
		sb.append(getCuotaInicial());
		sb.append(", periodoInvers=");
		sb.append(getPeriodoInvers());
		sb.append(", tasa=");
		sb.append(getTasa());
		sb.append(", segDesgrav=");
		sb.append(getSegDesgrav());
		sb.append(", tipoCuota=");
		sb.append(getTipoCuota());
		sb.append(", IP=");
		sb.append(getIP());
		sb.append(", fechaHora=");
		sb.append(getFechaHora());
		sb.append(", UTMSource=");
		sb.append(getUTMSource());
		sb.append(", UTMMedium=");
		sb.append(getUTMMedium());
		sb.append(", UTMCampaing=");
		sb.append(getUTMCampaing());
		sb.append(", UTMContent=");
		sb.append(getUTMContent());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.AuditoriaSimulador");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idAuditoriaSim</column-name><column-value><![CDATA[");
		sb.append(getIdAuditoriaSim());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoSimulador</column-name><column-value><![CDATA[");
		sb.append(getTipoSimulador());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idTransaccion</column-name><column-value><![CDATA[");
		sb.append(getIdTransaccion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoDocumento</column-name><column-value><![CDATA[");
		sb.append(getTipoDocumento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numDocumento</column-name><column-value><![CDATA[");
		sb.append(getNumDocumento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moneda</column-name><column-value><![CDATA[");
		sb.append(getMoneda());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoProducto</column-name><column-value><![CDATA[");
		sb.append(getTipoProducto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invirtioFondMut</column-name><column-value><![CDATA[");
		sb.append(getInvirtioFondMut());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nivelConocimFondMut</column-name><column-value><![CDATA[");
		sb.append(getNivelConocimFondMut());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reaccionVarMerc</column-name><column-value><![CDATA[");
		sb.append(getReaccionVarMerc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valorBien</column-name><column-value><![CDATA[");
		sb.append(getValorBien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>montoPrestamo</column-name><column-value><![CDATA[");
		sb.append(getMontoPrestamo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cuotaInicial</column-name><column-value><![CDATA[");
		sb.append(getCuotaInicial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>periodoInvers</column-name><column-value><![CDATA[");
		sb.append(getPeriodoInvers());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tasa</column-name><column-value><![CDATA[");
		sb.append(getTasa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>segDesgrav</column-name><column-value><![CDATA[");
		sb.append(getSegDesgrav());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoCuota</column-name><column-value><![CDATA[");
		sb.append(getTipoCuota());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IP</column-name><column-value><![CDATA[");
		sb.append(getIP());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaHora</column-name><column-value><![CDATA[");
		sb.append(getFechaHora());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMSource</column-name><column-value><![CDATA[");
		sb.append(getUTMSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMMedium</column-name><column-value><![CDATA[");
		sb.append(getUTMMedium());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMCampaing</column-name><column-value><![CDATA[");
		sb.append(getUTMCampaing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMContent</column-name><column-value><![CDATA[");
		sb.append(getUTMContent());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AuditoriaSimulador.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			AuditoriaSimulador.class
		};
	private long _idAuditoriaSim;
	private String _tipoSimulador;
	private String _idTransaccion;
	private String _tipoDocumento;
	private String _numDocumento;
	private String _moneda;
	private String _tipoProducto;
	private String _invirtioFondMut;
	private String _nivelConocimFondMut;
	private String _reaccionVarMerc;
	private Double _valorBien;
	private Double _montoPrestamo;
	private Double _cuotaInicial;
	private String _periodoInvers;
	private Double _tasa;
	private String _segDesgrav;
	private String _tipoCuota;
	private String _IP;
	private Date _fechaHora;
	private String _UTMSource;
	private String _UTMMedium;
	private String _UTMCampaing;
	private String _UTMContent;
	private AuditoriaSimulador _escapedModelProxy;
}