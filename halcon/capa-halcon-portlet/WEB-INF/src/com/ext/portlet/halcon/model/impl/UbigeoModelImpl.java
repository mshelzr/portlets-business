/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.Ubigeo;
import com.ext.portlet.halcon.model.UbigeoModel;
import com.ext.portlet.halcon.model.UbigeoSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Ubigeo service. Represents a row in the &quot;T_UBIGEO&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.UbigeoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UbigeoImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see UbigeoImpl
 * @see com.ext.portlet.halcon.model.Ubigeo
 * @see com.ext.portlet.halcon.model.UbigeoModel
 * @generated
 */
@JSON(strict = true)
public class UbigeoModelImpl extends BaseModelImpl<Ubigeo>
	implements UbigeoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ubigeo model instance should use the {@link com.ext.portlet.halcon.model.Ubigeo} interface instead.
	 */
	public static final String TABLE_NAME = "T_UBIGEO";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ubig_IdUbigeo", Types.BIGINT },
			{ "ubig_Codigo", Types.VARCHAR },
			{ "ubig_Nombre", Types.VARCHAR },
			{ "ubig_CodDepartamento", Types.VARCHAR },
			{ "ubig_CodProvincia", Types.VARCHAR },
			{ "ubig_CodDistrito", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table T_UBIGEO (ubig_IdUbigeo LONG not null primary key IDENTITY,ubig_Codigo VARCHAR(75) null,ubig_Nombre VARCHAR(75) null,ubig_CodDepartamento VARCHAR(75) null,ubig_CodProvincia VARCHAR(75) null,ubig_CodDistrito VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table T_UBIGEO";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.Ubigeo"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.Ubigeo"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Ubigeo toModel(UbigeoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Ubigeo model = new UbigeoImpl();

		model.setIdUbigeo(soapModel.getIdUbigeo());
		model.setCodigo(soapModel.getCodigo());
		model.setNombre(soapModel.getNombre());
		model.setCodDepartamento(soapModel.getCodDepartamento());
		model.setCodProvincia(soapModel.getCodProvincia());
		model.setCodDistrito(soapModel.getCodDistrito());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Ubigeo> toModels(UbigeoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Ubigeo> models = new ArrayList<Ubigeo>(soapModels.length);

		for (UbigeoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.Ubigeo"));

	public UbigeoModelImpl() {
	}

	public long getPrimaryKey() {
		return _idUbigeo;
	}

	public void setPrimaryKey(long primaryKey) {
		setIdUbigeo(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_idUbigeo);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Ubigeo.class;
	}

	public String getModelClassName() {
		return Ubigeo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idUbigeo", getIdUbigeo());
		attributes.put("codigo", getCodigo());
		attributes.put("nombre", getNombre());
		attributes.put("codDepartamento", getCodDepartamento());
		attributes.put("codProvincia", getCodProvincia());
		attributes.put("codDistrito", getCodDistrito());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idUbigeo = (Long)attributes.get("idUbigeo");

		if (idUbigeo != null) {
			setIdUbigeo(idUbigeo);
		}

		String codigo = (String)attributes.get("codigo");

		if (codigo != null) {
			setCodigo(codigo);
		}

		String nombre = (String)attributes.get("nombre");

		if (nombre != null) {
			setNombre(nombre);
		}

		String codDepartamento = (String)attributes.get("codDepartamento");

		if (codDepartamento != null) {
			setCodDepartamento(codDepartamento);
		}

		String codProvincia = (String)attributes.get("codProvincia");

		if (codProvincia != null) {
			setCodProvincia(codProvincia);
		}

		String codDistrito = (String)attributes.get("codDistrito");

		if (codDistrito != null) {
			setCodDistrito(codDistrito);
		}
	}

	@JSON
	public long getIdUbigeo() {
		return _idUbigeo;
	}

	public void setIdUbigeo(long idUbigeo) {
		_idUbigeo = idUbigeo;
	}

	@JSON
	public String getCodigo() {
		if (_codigo == null) {
			return StringPool.BLANK;
		}
		else {
			return _codigo;
		}
	}

	public void setCodigo(String codigo) {
		_codigo = codigo;
	}

	@JSON
	public String getNombre() {
		if (_nombre == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombre;
		}
	}

	public void setNombre(String nombre) {
		_nombre = nombre;
	}

	@JSON
	public String getCodDepartamento() {
		if (_codDepartamento == null) {
			return StringPool.BLANK;
		}
		else {
			return _codDepartamento;
		}
	}

	public void setCodDepartamento(String codDepartamento) {
		_codDepartamento = codDepartamento;
	}

	@JSON
	public String getCodProvincia() {
		if (_codProvincia == null) {
			return StringPool.BLANK;
		}
		else {
			return _codProvincia;
		}
	}

	public void setCodProvincia(String codProvincia) {
		_codProvincia = codProvincia;
	}

	@JSON
	public String getCodDistrito() {
		if (_codDistrito == null) {
			return StringPool.BLANK;
		}
		else {
			return _codDistrito;
		}
	}

	public void setCodDistrito(String codDistrito) {
		_codDistrito = codDistrito;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Ubigeo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Ubigeo toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Ubigeo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		UbigeoImpl ubigeoImpl = new UbigeoImpl();

		ubigeoImpl.setIdUbigeo(getIdUbigeo());
		ubigeoImpl.setCodigo(getCodigo());
		ubigeoImpl.setNombre(getNombre());
		ubigeoImpl.setCodDepartamento(getCodDepartamento());
		ubigeoImpl.setCodProvincia(getCodProvincia());
		ubigeoImpl.setCodDistrito(getCodDistrito());

		ubigeoImpl.resetOriginalValues();

		return ubigeoImpl;
	}

	public int compareTo(Ubigeo ubigeo) {
		long primaryKey = ubigeo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Ubigeo ubigeo = null;

		try {
			ubigeo = (Ubigeo)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = ubigeo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Ubigeo> toCacheModel() {
		UbigeoCacheModel ubigeoCacheModel = new UbigeoCacheModel();

		ubigeoCacheModel.idUbigeo = getIdUbigeo();

		ubigeoCacheModel.codigo = getCodigo();

		String codigo = ubigeoCacheModel.codigo;

		if ((codigo != null) && (codigo.length() == 0)) {
			ubigeoCacheModel.codigo = null;
		}

		ubigeoCacheModel.nombre = getNombre();

		String nombre = ubigeoCacheModel.nombre;

		if ((nombre != null) && (nombre.length() == 0)) {
			ubigeoCacheModel.nombre = null;
		}

		ubigeoCacheModel.codDepartamento = getCodDepartamento();

		String codDepartamento = ubigeoCacheModel.codDepartamento;

		if ((codDepartamento != null) && (codDepartamento.length() == 0)) {
			ubigeoCacheModel.codDepartamento = null;
		}

		ubigeoCacheModel.codProvincia = getCodProvincia();

		String codProvincia = ubigeoCacheModel.codProvincia;

		if ((codProvincia != null) && (codProvincia.length() == 0)) {
			ubigeoCacheModel.codProvincia = null;
		}

		ubigeoCacheModel.codDistrito = getCodDistrito();

		String codDistrito = ubigeoCacheModel.codDistrito;

		if ((codDistrito != null) && (codDistrito.length() == 0)) {
			ubigeoCacheModel.codDistrito = null;
		}

		return ubigeoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{idUbigeo=");
		sb.append(getIdUbigeo());
		sb.append(", codigo=");
		sb.append(getCodigo());
		sb.append(", nombre=");
		sb.append(getNombre());
		sb.append(", codDepartamento=");
		sb.append(getCodDepartamento());
		sb.append(", codProvincia=");
		sb.append(getCodProvincia());
		sb.append(", codDistrito=");
		sb.append(getCodDistrito());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.Ubigeo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idUbigeo</column-name><column-value><![CDATA[");
		sb.append(getIdUbigeo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigo</column-name><column-value><![CDATA[");
		sb.append(getCodigo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombre</column-name><column-value><![CDATA[");
		sb.append(getNombre());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codDepartamento</column-name><column-value><![CDATA[");
		sb.append(getCodDepartamento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codProvincia</column-name><column-value><![CDATA[");
		sb.append(getCodProvincia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codDistrito</column-name><column-value><![CDATA[");
		sb.append(getCodDistrito());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Ubigeo.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Ubigeo.class
		};
	private long _idUbigeo;
	private String _codigo;
	private String _nombre;
	private String _codDepartamento;
	private String _codProvincia;
	private String _codDistrito;
	private Ubigeo _escapedModelProxy;
}