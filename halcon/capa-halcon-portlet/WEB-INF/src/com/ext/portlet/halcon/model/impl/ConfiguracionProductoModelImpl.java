/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.ConfiguracionProducto;
import com.ext.portlet.halcon.model.ConfiguracionProductoModel;
import com.ext.portlet.halcon.model.ConfiguracionProductoSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ConfiguracionProducto service. Represents a row in the &quot;T_CONFIGURACION_PRODUCTO&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.ConfiguracionProductoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ConfiguracionProductoImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see ConfiguracionProductoImpl
 * @see com.ext.portlet.halcon.model.ConfiguracionProducto
 * @see com.ext.portlet.halcon.model.ConfiguracionProductoModel
 * @generated
 */
@JSON(strict = true)
public class ConfiguracionProductoModelImpl extends BaseModelImpl<ConfiguracionProducto>
	implements ConfiguracionProductoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a configuracion producto model instance should use the {@link com.ext.portlet.halcon.model.ConfiguracionProducto} interface instead.
	 */
	public static final String TABLE_NAME = "T_CONFIGURACION_PRODUCTO";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cfpr_IdConfiguracionProducto", Types.BIGINT },
			{ "cfpr_IdConfiguracionPerfilador", Types.BIGINT },
			{ "cfpr_IdProducto", Types.BIGINT },
			{ "cfpr_NombreProducto", Types.VARCHAR },
			{ "cfpr_CodigoSiebelProducto", Types.VARCHAR },
			{ "cfpr_EstadoConfiguracion", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table T_CONFIGURACION_PRODUCTO (cfpr_IdConfiguracionProducto LONG not null primary key IDENTITY,cfpr_IdConfiguracionPerfilador LONG,cfpr_IdProducto LONG,cfpr_NombreProducto VARCHAR(75) null,cfpr_CodigoSiebelProducto VARCHAR(75) null,cfpr_EstadoConfiguracion INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table T_CONFIGURACION_PRODUCTO";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.ConfiguracionProducto"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.ConfiguracionProducto"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ConfiguracionProducto toModel(
		ConfiguracionProductoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ConfiguracionProducto model = new ConfiguracionProductoImpl();

		model.setIdConfiguracionProducto(soapModel.getIdConfiguracionProducto());
		model.setIdConfiguracionPerfilador(soapModel.getIdConfiguracionPerfilador());
		model.setIdProducto(soapModel.getIdProducto());
		model.setNombreProducto(soapModel.getNombreProducto());
		model.setCodigoSiebelProducto(soapModel.getCodigoSiebelProducto());
		model.setEstadoConfiguracion(soapModel.getEstadoConfiguracion());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ConfiguracionProducto> toModels(
		ConfiguracionProductoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ConfiguracionProducto> models = new ArrayList<ConfiguracionProducto>(soapModels.length);

		for (ConfiguracionProductoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.ConfiguracionProducto"));

	public ConfiguracionProductoModelImpl() {
	}

	public long getPrimaryKey() {
		return _idConfiguracionProducto;
	}

	public void setPrimaryKey(long primaryKey) {
		setIdConfiguracionProducto(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_idConfiguracionProducto);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ConfiguracionProducto.class;
	}

	public String getModelClassName() {
		return ConfiguracionProducto.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idConfiguracionProducto", getIdConfiguracionProducto());
		attributes.put("idConfiguracionPerfilador",
			getIdConfiguracionPerfilador());
		attributes.put("idProducto", getIdProducto());
		attributes.put("nombreProducto", getNombreProducto());
		attributes.put("codigoSiebelProducto", getCodigoSiebelProducto());
		attributes.put("estadoConfiguracion", getEstadoConfiguracion());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idConfiguracionProducto = (Long)attributes.get(
				"idConfiguracionProducto");

		if (idConfiguracionProducto != null) {
			setIdConfiguracionProducto(idConfiguracionProducto);
		}

		Long idConfiguracionPerfilador = (Long)attributes.get(
				"idConfiguracionPerfilador");

		if (idConfiguracionPerfilador != null) {
			setIdConfiguracionPerfilador(idConfiguracionPerfilador);
		}

		Long idProducto = (Long)attributes.get("idProducto");

		if (idProducto != null) {
			setIdProducto(idProducto);
		}

		String nombreProducto = (String)attributes.get("nombreProducto");

		if (nombreProducto != null) {
			setNombreProducto(nombreProducto);
		}

		String codigoSiebelProducto = (String)attributes.get(
				"codigoSiebelProducto");

		if (codigoSiebelProducto != null) {
			setCodigoSiebelProducto(codigoSiebelProducto);
		}

		Integer estadoConfiguracion = (Integer)attributes.get(
				"estadoConfiguracion");

		if (estadoConfiguracion != null) {
			setEstadoConfiguracion(estadoConfiguracion);
		}
	}

	@JSON
	public long getIdConfiguracionProducto() {
		return _idConfiguracionProducto;
	}

	public void setIdConfiguracionProducto(long idConfiguracionProducto) {
		_idConfiguracionProducto = idConfiguracionProducto;
	}

	@JSON
	public Long getIdConfiguracionPerfilador() {
		return _idConfiguracionPerfilador;
	}

	public void setIdConfiguracionPerfilador(Long idConfiguracionPerfilador) {
		_idConfiguracionPerfilador = idConfiguracionPerfilador;
	}

	@JSON
	public Long getIdProducto() {
		return _idProducto;
	}

	public void setIdProducto(Long idProducto) {
		_idProducto = idProducto;
	}

	@JSON
	public String getNombreProducto() {
		if (_nombreProducto == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombreProducto;
		}
	}

	public void setNombreProducto(String nombreProducto) {
		_nombreProducto = nombreProducto;
	}

	@JSON
	public String getCodigoSiebelProducto() {
		if (_codigoSiebelProducto == null) {
			return StringPool.BLANK;
		}
		else {
			return _codigoSiebelProducto;
		}
	}

	public void setCodigoSiebelProducto(String codigoSiebelProducto) {
		_codigoSiebelProducto = codigoSiebelProducto;
	}

	@JSON
	public Integer getEstadoConfiguracion() {
		return _estadoConfiguracion;
	}

	public void setEstadoConfiguracion(Integer estadoConfiguracion) {
		_estadoConfiguracion = estadoConfiguracion;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ConfiguracionProducto.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ConfiguracionProducto toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ConfiguracionProducto)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ConfiguracionProductoImpl configuracionProductoImpl = new ConfiguracionProductoImpl();

		configuracionProductoImpl.setIdConfiguracionProducto(getIdConfiguracionProducto());
		configuracionProductoImpl.setIdConfiguracionPerfilador(getIdConfiguracionPerfilador());
		configuracionProductoImpl.setIdProducto(getIdProducto());
		configuracionProductoImpl.setNombreProducto(getNombreProducto());
		configuracionProductoImpl.setCodigoSiebelProducto(getCodigoSiebelProducto());
		configuracionProductoImpl.setEstadoConfiguracion(getEstadoConfiguracion());

		configuracionProductoImpl.resetOriginalValues();

		return configuracionProductoImpl;
	}

	public int compareTo(ConfiguracionProducto configuracionProducto) {
		long primaryKey = configuracionProducto.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ConfiguracionProducto configuracionProducto = null;

		try {
			configuracionProducto = (ConfiguracionProducto)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = configuracionProducto.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ConfiguracionProducto> toCacheModel() {
		ConfiguracionProductoCacheModel configuracionProductoCacheModel = new ConfiguracionProductoCacheModel();

		configuracionProductoCacheModel.idConfiguracionProducto = getIdConfiguracionProducto();

		configuracionProductoCacheModel.idConfiguracionPerfilador = getIdConfiguracionPerfilador();

		configuracionProductoCacheModel.idProducto = getIdProducto();

		configuracionProductoCacheModel.nombreProducto = getNombreProducto();

		String nombreProducto = configuracionProductoCacheModel.nombreProducto;

		if ((nombreProducto != null) && (nombreProducto.length() == 0)) {
			configuracionProductoCacheModel.nombreProducto = null;
		}

		configuracionProductoCacheModel.codigoSiebelProducto = getCodigoSiebelProducto();

		String codigoSiebelProducto = configuracionProductoCacheModel.codigoSiebelProducto;

		if ((codigoSiebelProducto != null) &&
				(codigoSiebelProducto.length() == 0)) {
			configuracionProductoCacheModel.codigoSiebelProducto = null;
		}

		configuracionProductoCacheModel.estadoConfiguracion = getEstadoConfiguracion();

		return configuracionProductoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{idConfiguracionProducto=");
		sb.append(getIdConfiguracionProducto());
		sb.append(", idConfiguracionPerfilador=");
		sb.append(getIdConfiguracionPerfilador());
		sb.append(", idProducto=");
		sb.append(getIdProducto());
		sb.append(", nombreProducto=");
		sb.append(getNombreProducto());
		sb.append(", codigoSiebelProducto=");
		sb.append(getCodigoSiebelProducto());
		sb.append(", estadoConfiguracion=");
		sb.append(getEstadoConfiguracion());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.ConfiguracionProducto");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idConfiguracionProducto</column-name><column-value><![CDATA[");
		sb.append(getIdConfiguracionProducto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idConfiguracionPerfilador</column-name><column-value><![CDATA[");
		sb.append(getIdConfiguracionPerfilador());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idProducto</column-name><column-value><![CDATA[");
		sb.append(getIdProducto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombreProducto</column-name><column-value><![CDATA[");
		sb.append(getNombreProducto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigoSiebelProducto</column-name><column-value><![CDATA[");
		sb.append(getCodigoSiebelProducto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estadoConfiguracion</column-name><column-value><![CDATA[");
		sb.append(getEstadoConfiguracion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ConfiguracionProducto.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ConfiguracionProducto.class
		};
	private long _idConfiguracionProducto;
	private Long _idConfiguracionPerfilador;
	private Long _idProducto;
	private String _nombreProducto;
	private String _codigoSiebelProducto;
	private Integer _estadoConfiguracion;
	private ConfiguracionProducto _escapedModelProxy;
}