/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.AuditoriaPerfilador;
import com.ext.portlet.halcon.model.AuditoriaPerfiladorModel;
import com.ext.portlet.halcon.model.AuditoriaPerfiladorSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AuditoriaPerfilador service. Represents a row in the &quot;T_AUDITORIA_PERFILADOR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.AuditoriaPerfiladorModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditoriaPerfiladorImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see AuditoriaPerfiladorImpl
 * @see com.ext.portlet.halcon.model.AuditoriaPerfilador
 * @see com.ext.portlet.halcon.model.AuditoriaPerfiladorModel
 * @generated
 */
@JSON(strict = true)
public class AuditoriaPerfiladorModelImpl extends BaseModelImpl<AuditoriaPerfilador>
	implements AuditoriaPerfiladorModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a auditoria perfilador model instance should use the {@link com.ext.portlet.halcon.model.AuditoriaPerfilador} interface instead.
	 */
	public static final String TABLE_NAME = "T_AUDITORIA_PERFILADOR";
	public static final Object[][] TABLE_COLUMNS = {
			{ "aupf_IdAuditoriaPer", Types.BIGINT },
			{ "aupf_TipoDocumento", Types.VARCHAR },
			{ "aupf_NumeroDocumento", Types.VARCHAR },
			{ "aupf_Perfilador", Types.VARCHAR },
			{ "aupf_Session", Types.VARCHAR },
			{ "aupf_Transaccion", Types.VARCHAR },
			{ "aupf_Monto", Types.DOUBLE },
			{ "aupf_TipoCredito", Types.VARCHAR },
			{ "aupf_IP", Types.VARCHAR },
			{ "aupf_FechaHora", Types.TIMESTAMP },
			{ "aupf_UTMSource", Types.VARCHAR },
			{ "aupf_UTMMedium", Types.VARCHAR },
			{ "aupf_UTMCampaing", Types.VARCHAR },
			{ "aupf_UTMContent", Types.VARCHAR },
			{ "aupf_Pregunta01", Types.VARCHAR },
			{ "aupf_Pregunta02", Types.VARCHAR },
			{ "aupf_Pregunta03", Types.VARCHAR },
			{ "aupf_Pregunta04", Types.VARCHAR },
			{ "aupf_Respuesta01", Types.VARCHAR },
			{ "aupf_Respuesta02", Types.VARCHAR },
			{ "aupf_Respuesta03", Types.VARCHAR },
			{ "aupf_Respuesta04", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table T_AUDITORIA_PERFILADOR (aupf_IdAuditoriaPer LONG not null primary key IDENTITY,aupf_TipoDocumento VARCHAR(75) null,aupf_NumeroDocumento VARCHAR(75) null,aupf_Perfilador VARCHAR(75) null,aupf_Session VARCHAR(75) null,aupf_Transaccion VARCHAR(75) null,aupf_Monto DOUBLE,aupf_TipoCredito VARCHAR(75) null,aupf_IP VARCHAR(75) null,aupf_FechaHora DATE null,aupf_UTMSource VARCHAR(75) null,aupf_UTMMedium VARCHAR(75) null,aupf_UTMCampaing VARCHAR(75) null,aupf_UTMContent VARCHAR(75) null,aupf_Pregunta01 VARCHAR(75) null,aupf_Pregunta02 VARCHAR(75) null,aupf_Pregunta03 VARCHAR(75) null,aupf_Pregunta04 VARCHAR(75) null,aupf_Respuesta01 VARCHAR(75) null,aupf_Respuesta02 VARCHAR(75) null,aupf_Respuesta03 VARCHAR(75) null,aupf_Respuesta04 VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table T_AUDITORIA_PERFILADOR";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.AuditoriaPerfilador"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.AuditoriaPerfilador"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AuditoriaPerfilador toModel(AuditoriaPerfiladorSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AuditoriaPerfilador model = new AuditoriaPerfiladorImpl();

		model.setIdAuditoriaPer(soapModel.getIdAuditoriaPer());
		model.setTipoDocumento(soapModel.getTipoDocumento());
		model.setNumeroDocumento(soapModel.getNumeroDocumento());
		model.setPerfilador(soapModel.getPerfilador());
		model.setSession(soapModel.getSession());
		model.setTransaccion(soapModel.getTransaccion());
		model.setMonto(soapModel.getMonto());
		model.setTipoCredito(soapModel.getTipoCredito());
		model.setIP(soapModel.getIP());
		model.setFechaHora(soapModel.getFechaHora());
		model.setUTMSource(soapModel.getUTMSource());
		model.setUTMMedium(soapModel.getUTMMedium());
		model.setUTMCampaing(soapModel.getUTMCampaing());
		model.setUTMContent(soapModel.getUTMContent());
		model.setPregunta01(soapModel.getPregunta01());
		model.setPregunta02(soapModel.getPregunta02());
		model.setPregunta03(soapModel.getPregunta03());
		model.setPregunta04(soapModel.getPregunta04());
		model.setRespuesta01(soapModel.getRespuesta01());
		model.setRespuesta02(soapModel.getRespuesta02());
		model.setRespuesta03(soapModel.getRespuesta03());
		model.setRespuesta04(soapModel.getRespuesta04());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AuditoriaPerfilador> toModels(
		AuditoriaPerfiladorSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AuditoriaPerfilador> models = new ArrayList<AuditoriaPerfilador>(soapModels.length);

		for (AuditoriaPerfiladorSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.AuditoriaPerfilador"));

	public AuditoriaPerfiladorModelImpl() {
	}

	public long getPrimaryKey() {
		return _idAuditoriaPer;
	}

	public void setPrimaryKey(long primaryKey) {
		setIdAuditoriaPer(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_idAuditoriaPer);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return AuditoriaPerfilador.class;
	}

	public String getModelClassName() {
		return AuditoriaPerfilador.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idAuditoriaPer", getIdAuditoriaPer());
		attributes.put("tipoDocumento", getTipoDocumento());
		attributes.put("numeroDocumento", getNumeroDocumento());
		attributes.put("perfilador", getPerfilador());
		attributes.put("session", getSession());
		attributes.put("transaccion", getTransaccion());
		attributes.put("monto", getMonto());
		attributes.put("tipoCredito", getTipoCredito());
		attributes.put("IP", getIP());
		attributes.put("fechaHora", getFechaHora());
		attributes.put("UTMSource", getUTMSource());
		attributes.put("UTMMedium", getUTMMedium());
		attributes.put("UTMCampaing", getUTMCampaing());
		attributes.put("UTMContent", getUTMContent());
		attributes.put("pregunta01", getPregunta01());
		attributes.put("pregunta02", getPregunta02());
		attributes.put("pregunta03", getPregunta03());
		attributes.put("pregunta04", getPregunta04());
		attributes.put("respuesta01", getRespuesta01());
		attributes.put("respuesta02", getRespuesta02());
		attributes.put("respuesta03", getRespuesta03());
		attributes.put("respuesta04", getRespuesta04());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idAuditoriaPer = (Long)attributes.get("idAuditoriaPer");

		if (idAuditoriaPer != null) {
			setIdAuditoriaPer(idAuditoriaPer);
		}

		String tipoDocumento = (String)attributes.get("tipoDocumento");

		if (tipoDocumento != null) {
			setTipoDocumento(tipoDocumento);
		}

		String numeroDocumento = (String)attributes.get("numeroDocumento");

		if (numeroDocumento != null) {
			setNumeroDocumento(numeroDocumento);
		}

		String perfilador = (String)attributes.get("perfilador");

		if (perfilador != null) {
			setPerfilador(perfilador);
		}

		String session = (String)attributes.get("session");

		if (session != null) {
			setSession(session);
		}

		String transaccion = (String)attributes.get("transaccion");

		if (transaccion != null) {
			setTransaccion(transaccion);
		}

		Double monto = (Double)attributes.get("monto");

		if (monto != null) {
			setMonto(monto);
		}

		String tipoCredito = (String)attributes.get("tipoCredito");

		if (tipoCredito != null) {
			setTipoCredito(tipoCredito);
		}

		String IP = (String)attributes.get("IP");

		if (IP != null) {
			setIP(IP);
		}

		Date fechaHora = (Date)attributes.get("fechaHora");

		if (fechaHora != null) {
			setFechaHora(fechaHora);
		}

		String UTMSource = (String)attributes.get("UTMSource");

		if (UTMSource != null) {
			setUTMSource(UTMSource);
		}

		String UTMMedium = (String)attributes.get("UTMMedium");

		if (UTMMedium != null) {
			setUTMMedium(UTMMedium);
		}

		String UTMCampaing = (String)attributes.get("UTMCampaing");

		if (UTMCampaing != null) {
			setUTMCampaing(UTMCampaing);
		}

		String UTMContent = (String)attributes.get("UTMContent");

		if (UTMContent != null) {
			setUTMContent(UTMContent);
		}

		String pregunta01 = (String)attributes.get("pregunta01");

		if (pregunta01 != null) {
			setPregunta01(pregunta01);
		}

		String pregunta02 = (String)attributes.get("pregunta02");

		if (pregunta02 != null) {
			setPregunta02(pregunta02);
		}

		String pregunta03 = (String)attributes.get("pregunta03");

		if (pregunta03 != null) {
			setPregunta03(pregunta03);
		}

		String pregunta04 = (String)attributes.get("pregunta04");

		if (pregunta04 != null) {
			setPregunta04(pregunta04);
		}

		String respuesta01 = (String)attributes.get("respuesta01");

		if (respuesta01 != null) {
			setRespuesta01(respuesta01);
		}

		String respuesta02 = (String)attributes.get("respuesta02");

		if (respuesta02 != null) {
			setRespuesta02(respuesta02);
		}

		String respuesta03 = (String)attributes.get("respuesta03");

		if (respuesta03 != null) {
			setRespuesta03(respuesta03);
		}

		String respuesta04 = (String)attributes.get("respuesta04");

		if (respuesta04 != null) {
			setRespuesta04(respuesta04);
		}
	}

	@JSON
	public long getIdAuditoriaPer() {
		return _idAuditoriaPer;
	}

	public void setIdAuditoriaPer(long idAuditoriaPer) {
		_idAuditoriaPer = idAuditoriaPer;
	}

	@JSON
	public String getTipoDocumento() {
		if (_tipoDocumento == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoDocumento;
		}
	}

	public void setTipoDocumento(String tipoDocumento) {
		_tipoDocumento = tipoDocumento;
	}

	@JSON
	public String getNumeroDocumento() {
		if (_numeroDocumento == null) {
			return StringPool.BLANK;
		}
		else {
			return _numeroDocumento;
		}
	}

	public void setNumeroDocumento(String numeroDocumento) {
		_numeroDocumento = numeroDocumento;
	}

	@JSON
	public String getPerfilador() {
		if (_perfilador == null) {
			return StringPool.BLANK;
		}
		else {
			return _perfilador;
		}
	}

	public void setPerfilador(String perfilador) {
		_perfilador = perfilador;
	}

	@JSON
	public String getSession() {
		if (_session == null) {
			return StringPool.BLANK;
		}
		else {
			return _session;
		}
	}

	public void setSession(String session) {
		_session = session;
	}

	@JSON
	public String getTransaccion() {
		if (_transaccion == null) {
			return StringPool.BLANK;
		}
		else {
			return _transaccion;
		}
	}

	public void setTransaccion(String transaccion) {
		_transaccion = transaccion;
	}

	@JSON
	public Double getMonto() {
		return _monto;
	}

	public void setMonto(Double monto) {
		_monto = monto;
	}

	@JSON
	public String getTipoCredito() {
		if (_tipoCredito == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoCredito;
		}
	}

	public void setTipoCredito(String tipoCredito) {
		_tipoCredito = tipoCredito;
	}

	@JSON
	public String getIP() {
		if (_IP == null) {
			return StringPool.BLANK;
		}
		else {
			return _IP;
		}
	}

	public void setIP(String IP) {
		_IP = IP;
	}

	@JSON
	public Date getFechaHora() {
		return _fechaHora;
	}

	public void setFechaHora(Date fechaHora) {
		_fechaHora = fechaHora;
	}

	@JSON
	public String getUTMSource() {
		if (_UTMSource == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMSource;
		}
	}

	public void setUTMSource(String UTMSource) {
		_UTMSource = UTMSource;
	}

	@JSON
	public String getUTMMedium() {
		if (_UTMMedium == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMMedium;
		}
	}

	public void setUTMMedium(String UTMMedium) {
		_UTMMedium = UTMMedium;
	}

	@JSON
	public String getUTMCampaing() {
		if (_UTMCampaing == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMCampaing;
		}
	}

	public void setUTMCampaing(String UTMCampaing) {
		_UTMCampaing = UTMCampaing;
	}

	@JSON
	public String getUTMContent() {
		if (_UTMContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _UTMContent;
		}
	}

	public void setUTMContent(String UTMContent) {
		_UTMContent = UTMContent;
	}

	@JSON
	public String getPregunta01() {
		if (_pregunta01 == null) {
			return StringPool.BLANK;
		}
		else {
			return _pregunta01;
		}
	}

	public void setPregunta01(String pregunta01) {
		_pregunta01 = pregunta01;
	}

	@JSON
	public String getPregunta02() {
		if (_pregunta02 == null) {
			return StringPool.BLANK;
		}
		else {
			return _pregunta02;
		}
	}

	public void setPregunta02(String pregunta02) {
		_pregunta02 = pregunta02;
	}

	@JSON
	public String getPregunta03() {
		if (_pregunta03 == null) {
			return StringPool.BLANK;
		}
		else {
			return _pregunta03;
		}
	}

	public void setPregunta03(String pregunta03) {
		_pregunta03 = pregunta03;
	}

	@JSON
	public String getPregunta04() {
		if (_pregunta04 == null) {
			return StringPool.BLANK;
		}
		else {
			return _pregunta04;
		}
	}

	public void setPregunta04(String pregunta04) {
		_pregunta04 = pregunta04;
	}

	@JSON
	public String getRespuesta01() {
		if (_respuesta01 == null) {
			return StringPool.BLANK;
		}
		else {
			return _respuesta01;
		}
	}

	public void setRespuesta01(String respuesta01) {
		_respuesta01 = respuesta01;
	}

	@JSON
	public String getRespuesta02() {
		if (_respuesta02 == null) {
			return StringPool.BLANK;
		}
		else {
			return _respuesta02;
		}
	}

	public void setRespuesta02(String respuesta02) {
		_respuesta02 = respuesta02;
	}

	@JSON
	public String getRespuesta03() {
		if (_respuesta03 == null) {
			return StringPool.BLANK;
		}
		else {
			return _respuesta03;
		}
	}

	public void setRespuesta03(String respuesta03) {
		_respuesta03 = respuesta03;
	}

	@JSON
	public String getRespuesta04() {
		if (_respuesta04 == null) {
			return StringPool.BLANK;
		}
		else {
			return _respuesta04;
		}
	}

	public void setRespuesta04(String respuesta04) {
		_respuesta04 = respuesta04;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AuditoriaPerfilador.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AuditoriaPerfilador toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (AuditoriaPerfilador)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		AuditoriaPerfiladorImpl auditoriaPerfiladorImpl = new AuditoriaPerfiladorImpl();

		auditoriaPerfiladorImpl.setIdAuditoriaPer(getIdAuditoriaPer());
		auditoriaPerfiladorImpl.setTipoDocumento(getTipoDocumento());
		auditoriaPerfiladorImpl.setNumeroDocumento(getNumeroDocumento());
		auditoriaPerfiladorImpl.setPerfilador(getPerfilador());
		auditoriaPerfiladorImpl.setSession(getSession());
		auditoriaPerfiladorImpl.setTransaccion(getTransaccion());
		auditoriaPerfiladorImpl.setMonto(getMonto());
		auditoriaPerfiladorImpl.setTipoCredito(getTipoCredito());
		auditoriaPerfiladorImpl.setIP(getIP());
		auditoriaPerfiladorImpl.setFechaHora(getFechaHora());
		auditoriaPerfiladorImpl.setUTMSource(getUTMSource());
		auditoriaPerfiladorImpl.setUTMMedium(getUTMMedium());
		auditoriaPerfiladorImpl.setUTMCampaing(getUTMCampaing());
		auditoriaPerfiladorImpl.setUTMContent(getUTMContent());
		auditoriaPerfiladorImpl.setPregunta01(getPregunta01());
		auditoriaPerfiladorImpl.setPregunta02(getPregunta02());
		auditoriaPerfiladorImpl.setPregunta03(getPregunta03());
		auditoriaPerfiladorImpl.setPregunta04(getPregunta04());
		auditoriaPerfiladorImpl.setRespuesta01(getRespuesta01());
		auditoriaPerfiladorImpl.setRespuesta02(getRespuesta02());
		auditoriaPerfiladorImpl.setRespuesta03(getRespuesta03());
		auditoriaPerfiladorImpl.setRespuesta04(getRespuesta04());

		auditoriaPerfiladorImpl.resetOriginalValues();

		return auditoriaPerfiladorImpl;
	}

	public int compareTo(AuditoriaPerfilador auditoriaPerfilador) {
		long primaryKey = auditoriaPerfilador.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		AuditoriaPerfilador auditoriaPerfilador = null;

		try {
			auditoriaPerfilador = (AuditoriaPerfilador)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = auditoriaPerfilador.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<AuditoriaPerfilador> toCacheModel() {
		AuditoriaPerfiladorCacheModel auditoriaPerfiladorCacheModel = new AuditoriaPerfiladorCacheModel();

		auditoriaPerfiladorCacheModel.idAuditoriaPer = getIdAuditoriaPer();

		auditoriaPerfiladorCacheModel.tipoDocumento = getTipoDocumento();

		String tipoDocumento = auditoriaPerfiladorCacheModel.tipoDocumento;

		if ((tipoDocumento != null) && (tipoDocumento.length() == 0)) {
			auditoriaPerfiladorCacheModel.tipoDocumento = null;
		}

		auditoriaPerfiladorCacheModel.numeroDocumento = getNumeroDocumento();

		String numeroDocumento = auditoriaPerfiladorCacheModel.numeroDocumento;

		if ((numeroDocumento != null) && (numeroDocumento.length() == 0)) {
			auditoriaPerfiladorCacheModel.numeroDocumento = null;
		}

		auditoriaPerfiladorCacheModel.perfilador = getPerfilador();

		String perfilador = auditoriaPerfiladorCacheModel.perfilador;

		if ((perfilador != null) && (perfilador.length() == 0)) {
			auditoriaPerfiladorCacheModel.perfilador = null;
		}

		auditoriaPerfiladorCacheModel.session = getSession();

		String session = auditoriaPerfiladorCacheModel.session;

		if ((session != null) && (session.length() == 0)) {
			auditoriaPerfiladorCacheModel.session = null;
		}

		auditoriaPerfiladorCacheModel.transaccion = getTransaccion();

		String transaccion = auditoriaPerfiladorCacheModel.transaccion;

		if ((transaccion != null) && (transaccion.length() == 0)) {
			auditoriaPerfiladorCacheModel.transaccion = null;
		}

		auditoriaPerfiladorCacheModel.monto = getMonto();

		auditoriaPerfiladorCacheModel.tipoCredito = getTipoCredito();

		String tipoCredito = auditoriaPerfiladorCacheModel.tipoCredito;

		if ((tipoCredito != null) && (tipoCredito.length() == 0)) {
			auditoriaPerfiladorCacheModel.tipoCredito = null;
		}

		auditoriaPerfiladorCacheModel.IP = getIP();

		String IP = auditoriaPerfiladorCacheModel.IP;

		if ((IP != null) && (IP.length() == 0)) {
			auditoriaPerfiladorCacheModel.IP = null;
		}

		Date fechaHora = getFechaHora();

		if (fechaHora != null) {
			auditoriaPerfiladorCacheModel.fechaHora = fechaHora.getTime();
		}
		else {
			auditoriaPerfiladorCacheModel.fechaHora = Long.MIN_VALUE;
		}

		auditoriaPerfiladorCacheModel.UTMSource = getUTMSource();

		String UTMSource = auditoriaPerfiladorCacheModel.UTMSource;

		if ((UTMSource != null) && (UTMSource.length() == 0)) {
			auditoriaPerfiladorCacheModel.UTMSource = null;
		}

		auditoriaPerfiladorCacheModel.UTMMedium = getUTMMedium();

		String UTMMedium = auditoriaPerfiladorCacheModel.UTMMedium;

		if ((UTMMedium != null) && (UTMMedium.length() == 0)) {
			auditoriaPerfiladorCacheModel.UTMMedium = null;
		}

		auditoriaPerfiladorCacheModel.UTMCampaing = getUTMCampaing();

		String UTMCampaing = auditoriaPerfiladorCacheModel.UTMCampaing;

		if ((UTMCampaing != null) && (UTMCampaing.length() == 0)) {
			auditoriaPerfiladorCacheModel.UTMCampaing = null;
		}

		auditoriaPerfiladorCacheModel.UTMContent = getUTMContent();

		String UTMContent = auditoriaPerfiladorCacheModel.UTMContent;

		if ((UTMContent != null) && (UTMContent.length() == 0)) {
			auditoriaPerfiladorCacheModel.UTMContent = null;
		}

		auditoriaPerfiladorCacheModel.pregunta01 = getPregunta01();

		String pregunta01 = auditoriaPerfiladorCacheModel.pregunta01;

		if ((pregunta01 != null) && (pregunta01.length() == 0)) {
			auditoriaPerfiladorCacheModel.pregunta01 = null;
		}

		auditoriaPerfiladorCacheModel.pregunta02 = getPregunta02();

		String pregunta02 = auditoriaPerfiladorCacheModel.pregunta02;

		if ((pregunta02 != null) && (pregunta02.length() == 0)) {
			auditoriaPerfiladorCacheModel.pregunta02 = null;
		}

		auditoriaPerfiladorCacheModel.pregunta03 = getPregunta03();

		String pregunta03 = auditoriaPerfiladorCacheModel.pregunta03;

		if ((pregunta03 != null) && (pregunta03.length() == 0)) {
			auditoriaPerfiladorCacheModel.pregunta03 = null;
		}

		auditoriaPerfiladorCacheModel.pregunta04 = getPregunta04();

		String pregunta04 = auditoriaPerfiladorCacheModel.pregunta04;

		if ((pregunta04 != null) && (pregunta04.length() == 0)) {
			auditoriaPerfiladorCacheModel.pregunta04 = null;
		}

		auditoriaPerfiladorCacheModel.respuesta01 = getRespuesta01();

		String respuesta01 = auditoriaPerfiladorCacheModel.respuesta01;

		if ((respuesta01 != null) && (respuesta01.length() == 0)) {
			auditoriaPerfiladorCacheModel.respuesta01 = null;
		}

		auditoriaPerfiladorCacheModel.respuesta02 = getRespuesta02();

		String respuesta02 = auditoriaPerfiladorCacheModel.respuesta02;

		if ((respuesta02 != null) && (respuesta02.length() == 0)) {
			auditoriaPerfiladorCacheModel.respuesta02 = null;
		}

		auditoriaPerfiladorCacheModel.respuesta03 = getRespuesta03();

		String respuesta03 = auditoriaPerfiladorCacheModel.respuesta03;

		if ((respuesta03 != null) && (respuesta03.length() == 0)) {
			auditoriaPerfiladorCacheModel.respuesta03 = null;
		}

		auditoriaPerfiladorCacheModel.respuesta04 = getRespuesta04();

		String respuesta04 = auditoriaPerfiladorCacheModel.respuesta04;

		if ((respuesta04 != null) && (respuesta04.length() == 0)) {
			auditoriaPerfiladorCacheModel.respuesta04 = null;
		}

		return auditoriaPerfiladorCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{idAuditoriaPer=");
		sb.append(getIdAuditoriaPer());
		sb.append(", tipoDocumento=");
		sb.append(getTipoDocumento());
		sb.append(", numeroDocumento=");
		sb.append(getNumeroDocumento());
		sb.append(", perfilador=");
		sb.append(getPerfilador());
		sb.append(", session=");
		sb.append(getSession());
		sb.append(", transaccion=");
		sb.append(getTransaccion());
		sb.append(", monto=");
		sb.append(getMonto());
		sb.append(", tipoCredito=");
		sb.append(getTipoCredito());
		sb.append(", IP=");
		sb.append(getIP());
		sb.append(", fechaHora=");
		sb.append(getFechaHora());
		sb.append(", UTMSource=");
		sb.append(getUTMSource());
		sb.append(", UTMMedium=");
		sb.append(getUTMMedium());
		sb.append(", UTMCampaing=");
		sb.append(getUTMCampaing());
		sb.append(", UTMContent=");
		sb.append(getUTMContent());
		sb.append(", pregunta01=");
		sb.append(getPregunta01());
		sb.append(", pregunta02=");
		sb.append(getPregunta02());
		sb.append(", pregunta03=");
		sb.append(getPregunta03());
		sb.append(", pregunta04=");
		sb.append(getPregunta04());
		sb.append(", respuesta01=");
		sb.append(getRespuesta01());
		sb.append(", respuesta02=");
		sb.append(getRespuesta02());
		sb.append(", respuesta03=");
		sb.append(getRespuesta03());
		sb.append(", respuesta04=");
		sb.append(getRespuesta04());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.AuditoriaPerfilador");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idAuditoriaPer</column-name><column-value><![CDATA[");
		sb.append(getIdAuditoriaPer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoDocumento</column-name><column-value><![CDATA[");
		sb.append(getTipoDocumento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numeroDocumento</column-name><column-value><![CDATA[");
		sb.append(getNumeroDocumento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perfilador</column-name><column-value><![CDATA[");
		sb.append(getPerfilador());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>session</column-name><column-value><![CDATA[");
		sb.append(getSession());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>transaccion</column-name><column-value><![CDATA[");
		sb.append(getTransaccion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>monto</column-name><column-value><![CDATA[");
		sb.append(getMonto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoCredito</column-name><column-value><![CDATA[");
		sb.append(getTipoCredito());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IP</column-name><column-value><![CDATA[");
		sb.append(getIP());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaHora</column-name><column-value><![CDATA[");
		sb.append(getFechaHora());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMSource</column-name><column-value><![CDATA[");
		sb.append(getUTMSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMMedium</column-name><column-value><![CDATA[");
		sb.append(getUTMMedium());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMCampaing</column-name><column-value><![CDATA[");
		sb.append(getUTMCampaing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UTMContent</column-name><column-value><![CDATA[");
		sb.append(getUTMContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pregunta01</column-name><column-value><![CDATA[");
		sb.append(getPregunta01());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pregunta02</column-name><column-value><![CDATA[");
		sb.append(getPregunta02());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pregunta03</column-name><column-value><![CDATA[");
		sb.append(getPregunta03());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pregunta04</column-name><column-value><![CDATA[");
		sb.append(getPregunta04());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuesta01</column-name><column-value><![CDATA[");
		sb.append(getRespuesta01());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuesta02</column-name><column-value><![CDATA[");
		sb.append(getRespuesta02());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuesta03</column-name><column-value><![CDATA[");
		sb.append(getRespuesta03());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuesta04</column-name><column-value><![CDATA[");
		sb.append(getRespuesta04());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AuditoriaPerfilador.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			AuditoriaPerfilador.class
		};
	private long _idAuditoriaPer;
	private String _tipoDocumento;
	private String _numeroDocumento;
	private String _perfilador;
	private String _session;
	private String _transaccion;
	private Double _monto;
	private String _tipoCredito;
	private String _IP;
	private Date _fechaHora;
	private String _UTMSource;
	private String _UTMMedium;
	private String _UTMCampaing;
	private String _UTMContent;
	private String _pregunta01;
	private String _pregunta02;
	private String _pregunta03;
	private String _pregunta04;
	private String _respuesta01;
	private String _respuesta02;
	private String _respuesta03;
	private String _respuesta04;
	private AuditoriaPerfilador _escapedModelProxy;
}