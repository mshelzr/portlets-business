/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.Parametro;
import com.ext.portlet.halcon.model.ParametroModel;
import com.ext.portlet.halcon.model.ParametroSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Parametro service. Represents a row in the &quot;T_PARAMETRO&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.ParametroModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ParametroImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see ParametroImpl
 * @see com.ext.portlet.halcon.model.Parametro
 * @see com.ext.portlet.halcon.model.ParametroModel
 * @generated
 */
@JSON(strict = true)
public class ParametroModelImpl extends BaseModelImpl<Parametro>
	implements ParametroModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a parametro model instance should use the {@link com.ext.portlet.halcon.model.Parametro} interface instead.
	 */
	public static final String TABLE_NAME = "T_PARAMETRO";
	public static final Object[][] TABLE_COLUMNS = {
			{ "parm_IdParametro", Types.INTEGER },
			{ "parm_IdParametroPadre", Types.INTEGER },
			{ "parm_ValorMonto1", Types.VARCHAR },
			{ "parm_ValorMonto2", Types.VARCHAR },
			{ "parm_ValorMonto3", Types.VARCHAR },
			{ "parm_Dato1", Types.VARCHAR },
			{ "parm_Dato2", Types.VARCHAR },
			{ "parm_Dato3", Types.VARCHAR },
			{ "parm_Dato4", Types.VARCHAR },
			{ "parm_Num1", Types.INTEGER },
			{ "parm_Num2", Types.INTEGER },
			{ "parm_Num3", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table T_PARAMETRO (parm_IdParametro INTEGER not null primary key IDENTITY,parm_IdParametroPadre INTEGER,parm_ValorMonto1 VARCHAR(75) null,parm_ValorMonto2 VARCHAR(75) null,parm_ValorMonto3 VARCHAR(75) null,parm_Dato1 VARCHAR(75) null,parm_Dato2 VARCHAR(75) null,parm_Dato3 VARCHAR(75) null,parm_Dato4 VARCHAR(75) null,parm_Num1 INTEGER,parm_Num2 INTEGER,parm_Num3 INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table T_PARAMETRO";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.Parametro"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.Parametro"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Parametro toModel(ParametroSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Parametro model = new ParametroImpl();

		model.setIdParametro(soapModel.getIdParametro());
		model.setIdParametroPadre(soapModel.getIdParametroPadre());
		model.setValorMonto1(soapModel.getValorMonto1());
		model.setValorMonto2(soapModel.getValorMonto2());
		model.setValorMonto3(soapModel.getValorMonto3());
		model.setDato1(soapModel.getDato1());
		model.setDato2(soapModel.getDato2());
		model.setDato3(soapModel.getDato3());
		model.setDato4(soapModel.getDato4());
		model.setNum1(soapModel.getNum1());
		model.setNum2(soapModel.getNum2());
		model.setNum3(soapModel.getNum3());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Parametro> toModels(ParametroSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Parametro> models = new ArrayList<Parametro>(soapModels.length);

		for (ParametroSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.Parametro"));

	public ParametroModelImpl() {
	}

	public int getPrimaryKey() {
		return _idParametro;
	}

	public void setPrimaryKey(int primaryKey) {
		setIdParametro(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_idParametro);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return Parametro.class;
	}

	public String getModelClassName() {
		return Parametro.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idParametro", getIdParametro());
		attributes.put("idParametroPadre", getIdParametroPadre());
		attributes.put("valorMonto1", getValorMonto1());
		attributes.put("valorMonto2", getValorMonto2());
		attributes.put("valorMonto3", getValorMonto3());
		attributes.put("dato1", getDato1());
		attributes.put("dato2", getDato2());
		attributes.put("dato3", getDato3());
		attributes.put("dato4", getDato4());
		attributes.put("num1", getNum1());
		attributes.put("num2", getNum2());
		attributes.put("num3", getNum3());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer idParametro = (Integer)attributes.get("idParametro");

		if (idParametro != null) {
			setIdParametro(idParametro);
		}

		Integer idParametroPadre = (Integer)attributes.get("idParametroPadre");

		if (idParametroPadre != null) {
			setIdParametroPadre(idParametroPadre);
		}

		String valorMonto1 = (String)attributes.get("valorMonto1");

		if (valorMonto1 != null) {
			setValorMonto1(valorMonto1);
		}

		String valorMonto2 = (String)attributes.get("valorMonto2");

		if (valorMonto2 != null) {
			setValorMonto2(valorMonto2);
		}

		String valorMonto3 = (String)attributes.get("valorMonto3");

		if (valorMonto3 != null) {
			setValorMonto3(valorMonto3);
		}

		String dato1 = (String)attributes.get("dato1");

		if (dato1 != null) {
			setDato1(dato1);
		}

		String dato2 = (String)attributes.get("dato2");

		if (dato2 != null) {
			setDato2(dato2);
		}

		String dato3 = (String)attributes.get("dato3");

		if (dato3 != null) {
			setDato3(dato3);
		}

		String dato4 = (String)attributes.get("dato4");

		if (dato4 != null) {
			setDato4(dato4);
		}

		Integer num1 = (Integer)attributes.get("num1");

		if (num1 != null) {
			setNum1(num1);
		}

		Integer num2 = (Integer)attributes.get("num2");

		if (num2 != null) {
			setNum2(num2);
		}

		Integer num3 = (Integer)attributes.get("num3");

		if (num3 != null) {
			setNum3(num3);
		}
	}

	@JSON
	public int getIdParametro() {
		return _idParametro;
	}

	public void setIdParametro(int idParametro) {
		_idParametro = idParametro;
	}

	@JSON
	public Integer getIdParametroPadre() {
		return _idParametroPadre;
	}

	public void setIdParametroPadre(Integer idParametroPadre) {
		_idParametroPadre = idParametroPadre;
	}

	@JSON
	public String getValorMonto1() {
		if (_valorMonto1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _valorMonto1;
		}
	}

	public void setValorMonto1(String valorMonto1) {
		_valorMonto1 = valorMonto1;
	}

	@JSON
	public String getValorMonto2() {
		if (_valorMonto2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _valorMonto2;
		}
	}

	public void setValorMonto2(String valorMonto2) {
		_valorMonto2 = valorMonto2;
	}

	@JSON
	public String getValorMonto3() {
		if (_valorMonto3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _valorMonto3;
		}
	}

	public void setValorMonto3(String valorMonto3) {
		_valorMonto3 = valorMonto3;
	}

	@JSON
	public String getDato1() {
		if (_dato1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _dato1;
		}
	}

	public void setDato1(String dato1) {
		_dato1 = dato1;
	}

	@JSON
	public String getDato2() {
		if (_dato2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _dato2;
		}
	}

	public void setDato2(String dato2) {
		_dato2 = dato2;
	}

	@JSON
	public String getDato3() {
		if (_dato3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _dato3;
		}
	}

	public void setDato3(String dato3) {
		_dato3 = dato3;
	}

	@JSON
	public String getDato4() {
		if (_dato4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _dato4;
		}
	}

	public void setDato4(String dato4) {
		_dato4 = dato4;
	}

	@JSON
	public Integer getNum1() {
		return _num1;
	}

	public void setNum1(Integer num1) {
		_num1 = num1;
	}

	@JSON
	public Integer getNum2() {
		return _num2;
	}

	public void setNum2(Integer num2) {
		_num2 = num2;
	}

	@JSON
	public Integer getNum3() {
		return _num3;
	}

	public void setNum3(Integer num3) {
		_num3 = num3;
	}

	@Override
	public Parametro toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Parametro)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ParametroImpl parametroImpl = new ParametroImpl();

		parametroImpl.setIdParametro(getIdParametro());
		parametroImpl.setIdParametroPadre(getIdParametroPadre());
		parametroImpl.setValorMonto1(getValorMonto1());
		parametroImpl.setValorMonto2(getValorMonto2());
		parametroImpl.setValorMonto3(getValorMonto3());
		parametroImpl.setDato1(getDato1());
		parametroImpl.setDato2(getDato2());
		parametroImpl.setDato3(getDato3());
		parametroImpl.setDato4(getDato4());
		parametroImpl.setNum1(getNum1());
		parametroImpl.setNum2(getNum2());
		parametroImpl.setNum3(getNum3());

		parametroImpl.resetOriginalValues();

		return parametroImpl;
	}

	public int compareTo(Parametro parametro) {
		int primaryKey = parametro.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Parametro parametro = null;

		try {
			parametro = (Parametro)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = parametro.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Parametro> toCacheModel() {
		ParametroCacheModel parametroCacheModel = new ParametroCacheModel();

		parametroCacheModel.idParametro = getIdParametro();

		parametroCacheModel.idParametroPadre = getIdParametroPadre();

		parametroCacheModel.valorMonto1 = getValorMonto1();

		String valorMonto1 = parametroCacheModel.valorMonto1;

		if ((valorMonto1 != null) && (valorMonto1.length() == 0)) {
			parametroCacheModel.valorMonto1 = null;
		}

		parametroCacheModel.valorMonto2 = getValorMonto2();

		String valorMonto2 = parametroCacheModel.valorMonto2;

		if ((valorMonto2 != null) && (valorMonto2.length() == 0)) {
			parametroCacheModel.valorMonto2 = null;
		}

		parametroCacheModel.valorMonto3 = getValorMonto3();

		String valorMonto3 = parametroCacheModel.valorMonto3;

		if ((valorMonto3 != null) && (valorMonto3.length() == 0)) {
			parametroCacheModel.valorMonto3 = null;
		}

		parametroCacheModel.dato1 = getDato1();

		String dato1 = parametroCacheModel.dato1;

		if ((dato1 != null) && (dato1.length() == 0)) {
			parametroCacheModel.dato1 = null;
		}

		parametroCacheModel.dato2 = getDato2();

		String dato2 = parametroCacheModel.dato2;

		if ((dato2 != null) && (dato2.length() == 0)) {
			parametroCacheModel.dato2 = null;
		}

		parametroCacheModel.dato3 = getDato3();

		String dato3 = parametroCacheModel.dato3;

		if ((dato3 != null) && (dato3.length() == 0)) {
			parametroCacheModel.dato3 = null;
		}

		parametroCacheModel.dato4 = getDato4();

		String dato4 = parametroCacheModel.dato4;

		if ((dato4 != null) && (dato4.length() == 0)) {
			parametroCacheModel.dato4 = null;
		}

		parametroCacheModel.num1 = getNum1();

		parametroCacheModel.num2 = getNum2();

		parametroCacheModel.num3 = getNum3();

		return parametroCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{idParametro=");
		sb.append(getIdParametro());
		sb.append(", idParametroPadre=");
		sb.append(getIdParametroPadre());
		sb.append(", valorMonto1=");
		sb.append(getValorMonto1());
		sb.append(", valorMonto2=");
		sb.append(getValorMonto2());
		sb.append(", valorMonto3=");
		sb.append(getValorMonto3());
		sb.append(", dato1=");
		sb.append(getDato1());
		sb.append(", dato2=");
		sb.append(getDato2());
		sb.append(", dato3=");
		sb.append(getDato3());
		sb.append(", dato4=");
		sb.append(getDato4());
		sb.append(", num1=");
		sb.append(getNum1());
		sb.append(", num2=");
		sb.append(getNum2());
		sb.append(", num3=");
		sb.append(getNum3());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.Parametro");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idParametro</column-name><column-value><![CDATA[");
		sb.append(getIdParametro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idParametroPadre</column-name><column-value><![CDATA[");
		sb.append(getIdParametroPadre());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valorMonto1</column-name><column-value><![CDATA[");
		sb.append(getValorMonto1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valorMonto2</column-name><column-value><![CDATA[");
		sb.append(getValorMonto2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valorMonto3</column-name><column-value><![CDATA[");
		sb.append(getValorMonto3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dato1</column-name><column-value><![CDATA[");
		sb.append(getDato1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dato2</column-name><column-value><![CDATA[");
		sb.append(getDato2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dato3</column-name><column-value><![CDATA[");
		sb.append(getDato3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dato4</column-name><column-value><![CDATA[");
		sb.append(getDato4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>num1</column-name><column-value><![CDATA[");
		sb.append(getNum1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>num2</column-name><column-value><![CDATA[");
		sb.append(getNum2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>num3</column-name><column-value><![CDATA[");
		sb.append(getNum3());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Parametro.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Parametro.class
		};
	private int _idParametro;
	private Integer _idParametroPadre;
	private String _valorMonto1;
	private String _valorMonto2;
	private String _valorMonto3;
	private String _dato1;
	private String _dato2;
	private String _dato3;
	private String _dato4;
	private Integer _num1;
	private Integer _num2;
	private Integer _num3;
	private Parametro _escapedModelProxy;
}