/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.PreguntaFrecuente;
import com.ext.portlet.halcon.model.PreguntaFrecuenteModel;
import com.ext.portlet.halcon.model.PreguntaFrecuenteSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PreguntaFrecuente service. Represents a row in the &quot;T_PREGUNTA_FRECUENTE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.PreguntaFrecuenteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PreguntaFrecuenteImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see PreguntaFrecuenteImpl
 * @see com.ext.portlet.halcon.model.PreguntaFrecuente
 * @see com.ext.portlet.halcon.model.PreguntaFrecuenteModel
 * @generated
 */
@JSON(strict = true)
public class PreguntaFrecuenteModelImpl extends BaseModelImpl<PreguntaFrecuente>
	implements PreguntaFrecuenteModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pregunta frecuente model instance should use the {@link com.ext.portlet.halcon.model.PreguntaFrecuente} interface instead.
	 */
	public static final String TABLE_NAME = "T_PREGUNTA_FRECUENTE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "prfr_IdPreguntaFrecuente", Types.INTEGER },
			{ "prfr_IdCategoriaSubCat", Types.INTEGER },
			{ "prfr_Enunciado", Types.VARCHAR },
			{ "prfr_Respuesta", Types.VARCHAR },
			{ "prfr_Estado", Types.BOOLEAN },
			{ "prfr_Etiqueta", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table T_PREGUNTA_FRECUENTE (prfr_IdPreguntaFrecuente INTEGER not null primary key IDENTITY,prfr_IdCategoriaSubCat INTEGER,prfr_Enunciado VARCHAR(75) null,prfr_Respuesta VARCHAR(75) null,prfr_Estado BOOLEAN,prfr_Etiqueta VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table T_PREGUNTA_FRECUENTE";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.PreguntaFrecuente"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.PreguntaFrecuente"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PreguntaFrecuente toModel(PreguntaFrecuenteSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PreguntaFrecuente model = new PreguntaFrecuenteImpl();

		model.setIdPreguntaFrecuente(soapModel.getIdPreguntaFrecuente());
		model.setIdCategoriaSubCat(soapModel.getIdCategoriaSubCat());
		model.setEnunciado(soapModel.getEnunciado());
		model.setRespuesta(soapModel.getRespuesta());
		model.setEstado(soapModel.getEstado());
		model.setEtiqueta(soapModel.getEtiqueta());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PreguntaFrecuente> toModels(
		PreguntaFrecuenteSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PreguntaFrecuente> models = new ArrayList<PreguntaFrecuente>(soapModels.length);

		for (PreguntaFrecuenteSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.PreguntaFrecuente"));

	public PreguntaFrecuenteModelImpl() {
	}

	public int getPrimaryKey() {
		return _idPreguntaFrecuente;
	}

	public void setPrimaryKey(int primaryKey) {
		setIdPreguntaFrecuente(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_idPreguntaFrecuente);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return PreguntaFrecuente.class;
	}

	public String getModelClassName() {
		return PreguntaFrecuente.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idPreguntaFrecuente", getIdPreguntaFrecuente());
		attributes.put("idCategoriaSubCat", getIdCategoriaSubCat());
		attributes.put("enunciado", getEnunciado());
		attributes.put("respuesta", getRespuesta());
		attributes.put("estado", getEstado());
		attributes.put("etiqueta", getEtiqueta());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer idPreguntaFrecuente = (Integer)attributes.get(
				"idPreguntaFrecuente");

		if (idPreguntaFrecuente != null) {
			setIdPreguntaFrecuente(idPreguntaFrecuente);
		}

		Integer idCategoriaSubCat = (Integer)attributes.get("idCategoriaSubCat");

		if (idCategoriaSubCat != null) {
			setIdCategoriaSubCat(idCategoriaSubCat);
		}

		String enunciado = (String)attributes.get("enunciado");

		if (enunciado != null) {
			setEnunciado(enunciado);
		}

		String respuesta = (String)attributes.get("respuesta");

		if (respuesta != null) {
			setRespuesta(respuesta);
		}

		Boolean estado = (Boolean)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}

		String etiqueta = (String)attributes.get("etiqueta");

		if (etiqueta != null) {
			setEtiqueta(etiqueta);
		}
	}

	@JSON
	public int getIdPreguntaFrecuente() {
		return _idPreguntaFrecuente;
	}

	public void setIdPreguntaFrecuente(int idPreguntaFrecuente) {
		_idPreguntaFrecuente = idPreguntaFrecuente;
	}

	@JSON
	public Integer getIdCategoriaSubCat() {
		return _idCategoriaSubCat;
	}

	public void setIdCategoriaSubCat(Integer idCategoriaSubCat) {
		_idCategoriaSubCat = idCategoriaSubCat;
	}

	@JSON
	public String getEnunciado() {
		if (_enunciado == null) {
			return StringPool.BLANK;
		}
		else {
			return _enunciado;
		}
	}

	public void setEnunciado(String enunciado) {
		_enunciado = enunciado;
	}

	@JSON
	public String getRespuesta() {
		if (_respuesta == null) {
			return StringPool.BLANK;
		}
		else {
			return _respuesta;
		}
	}

	public void setRespuesta(String respuesta) {
		_respuesta = respuesta;
	}

	@JSON
	public Boolean getEstado() {
		return _estado;
	}

	public void setEstado(Boolean estado) {
		_estado = estado;
	}

	@JSON
	public String getEtiqueta() {
		if (_etiqueta == null) {
			return StringPool.BLANK;
		}
		else {
			return _etiqueta;
		}
	}

	public void setEtiqueta(String etiqueta) {
		_etiqueta = etiqueta;
	}

	@Override
	public PreguntaFrecuente toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (PreguntaFrecuente)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		PreguntaFrecuenteImpl preguntaFrecuenteImpl = new PreguntaFrecuenteImpl();

		preguntaFrecuenteImpl.setIdPreguntaFrecuente(getIdPreguntaFrecuente());
		preguntaFrecuenteImpl.setIdCategoriaSubCat(getIdCategoriaSubCat());
		preguntaFrecuenteImpl.setEnunciado(getEnunciado());
		preguntaFrecuenteImpl.setRespuesta(getRespuesta());
		preguntaFrecuenteImpl.setEstado(getEstado());
		preguntaFrecuenteImpl.setEtiqueta(getEtiqueta());

		preguntaFrecuenteImpl.resetOriginalValues();

		return preguntaFrecuenteImpl;
	}

	public int compareTo(PreguntaFrecuente preguntaFrecuente) {
		int primaryKey = preguntaFrecuente.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PreguntaFrecuente preguntaFrecuente = null;

		try {
			preguntaFrecuente = (PreguntaFrecuente)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = preguntaFrecuente.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<PreguntaFrecuente> toCacheModel() {
		PreguntaFrecuenteCacheModel preguntaFrecuenteCacheModel = new PreguntaFrecuenteCacheModel();

		preguntaFrecuenteCacheModel.idPreguntaFrecuente = getIdPreguntaFrecuente();

		preguntaFrecuenteCacheModel.idCategoriaSubCat = getIdCategoriaSubCat();

		preguntaFrecuenteCacheModel.enunciado = getEnunciado();

		String enunciado = preguntaFrecuenteCacheModel.enunciado;

		if ((enunciado != null) && (enunciado.length() == 0)) {
			preguntaFrecuenteCacheModel.enunciado = null;
		}

		preguntaFrecuenteCacheModel.respuesta = getRespuesta();

		String respuesta = preguntaFrecuenteCacheModel.respuesta;

		if ((respuesta != null) && (respuesta.length() == 0)) {
			preguntaFrecuenteCacheModel.respuesta = null;
		}

		preguntaFrecuenteCacheModel.estado = getEstado();

		preguntaFrecuenteCacheModel.etiqueta = getEtiqueta();

		String etiqueta = preguntaFrecuenteCacheModel.etiqueta;

		if ((etiqueta != null) && (etiqueta.length() == 0)) {
			preguntaFrecuenteCacheModel.etiqueta = null;
		}

		return preguntaFrecuenteCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{idPreguntaFrecuente=");
		sb.append(getIdPreguntaFrecuente());
		sb.append(", idCategoriaSubCat=");
		sb.append(getIdCategoriaSubCat());
		sb.append(", enunciado=");
		sb.append(getEnunciado());
		sb.append(", respuesta=");
		sb.append(getRespuesta());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append(", etiqueta=");
		sb.append(getEtiqueta());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.PreguntaFrecuente");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idPreguntaFrecuente</column-name><column-value><![CDATA[");
		sb.append(getIdPreguntaFrecuente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idCategoriaSubCat</column-name><column-value><![CDATA[");
		sb.append(getIdCategoriaSubCat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enunciado</column-name><column-value><![CDATA[");
		sb.append(getEnunciado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuesta</column-name><column-value><![CDATA[");
		sb.append(getRespuesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>etiqueta</column-name><column-value><![CDATA[");
		sb.append(getEtiqueta());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PreguntaFrecuente.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			PreguntaFrecuente.class
		};
	private int _idPreguntaFrecuente;
	private Integer _idCategoriaSubCat;
	private String _enunciado;
	private String _respuesta;
	private Boolean _estado;
	private String _etiqueta;
	private PreguntaFrecuente _escapedModelProxy;
}