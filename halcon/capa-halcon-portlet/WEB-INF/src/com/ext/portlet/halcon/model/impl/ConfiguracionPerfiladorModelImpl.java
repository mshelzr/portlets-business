/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model.impl;

import com.ext.portlet.halcon.model.ConfiguracionPerfilador;
import com.ext.portlet.halcon.model.ConfiguracionPerfiladorModel;
import com.ext.portlet.halcon.model.ConfiguracionPerfiladorSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ConfiguracionPerfilador service. Represents a row in the &quot;T_CONFIGURACION_PERFILADOR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ext.portlet.halcon.model.ConfiguracionPerfiladorModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ConfiguracionPerfiladorImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see ConfiguracionPerfiladorImpl
 * @see com.ext.portlet.halcon.model.ConfiguracionPerfilador
 * @see com.ext.portlet.halcon.model.ConfiguracionPerfiladorModel
 * @generated
 */
@JSON(strict = true)
public class ConfiguracionPerfiladorModelImpl extends BaseModelImpl<ConfiguracionPerfilador>
	implements ConfiguracionPerfiladorModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a configuracion perfilador model instance should use the {@link com.ext.portlet.halcon.model.ConfiguracionPerfilador} interface instead.
	 */
	public static final String TABLE_NAME = "T_CONFIGURACION_PERFILADOR";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cfpf_IdConfiguracionPerfilador", Types.BIGINT },
			{ "cfpf_TipoVariable", Types.BIGINT },
			{ "cfpf_NombreVariable", Types.VARCHAR },
			{ "cfpf_CodigoClasificacion", Types.BIGINT },
			{ "cfpf_CodigoVariablePadre", Types.BIGINT },
			{ "cfpf_Valor1", Types.VARCHAR },
			{ "cfpf_Valor2", Types.VARCHAR },
			{ "cfpf_Valor3", Types.VARCHAR },
			{ "cfpf_Estado", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table T_CONFIGURACION_PERFILADOR (cfpf_IdConfiguracionPerfilador LONG not null primary key IDENTITY,cfpf_TipoVariable LONG,cfpf_NombreVariable VARCHAR(75) null,cfpf_CodigoClasificacion LONG,cfpf_CodigoVariablePadre LONG,cfpf_Valor1 VARCHAR(75) null,cfpf_Valor2 VARCHAR(75) null,cfpf_Valor3 VARCHAR(75) null,cfpf_Estado INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table T_CONFIGURACION_PERFILADOR";
	public static final String DATA_SOURCE = "halconDataSource";
	public static final String SESSION_FACTORY = "halconSessionFactory";
	public static final String TX_MANAGER = "halconTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ext.portlet.halcon.model.ConfiguracionPerfilador"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ext.portlet.halcon.model.ConfiguracionPerfilador"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ConfiguracionPerfilador toModel(
		ConfiguracionPerfiladorSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ConfiguracionPerfilador model = new ConfiguracionPerfiladorImpl();

		model.setIdConfiguracionPerfilador(soapModel.getIdConfiguracionPerfilador());
		model.setTipoVariable(soapModel.getTipoVariable());
		model.setNombreVariable(soapModel.getNombreVariable());
		model.setCodigoClasificacion(soapModel.getCodigoClasificacion());
		model.setCodigoVariablePadre(soapModel.getCodigoVariablePadre());
		model.setValor1(soapModel.getValor1());
		model.setValor2(soapModel.getValor2());
		model.setValor3(soapModel.getValor3());
		model.setEstado(soapModel.getEstado());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ConfiguracionPerfilador> toModels(
		ConfiguracionPerfiladorSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ConfiguracionPerfilador> models = new ArrayList<ConfiguracionPerfilador>(soapModels.length);

		for (ConfiguracionPerfiladorSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ext.portlet.halcon.model.ConfiguracionPerfilador"));

	public ConfiguracionPerfiladorModelImpl() {
	}

	public long getPrimaryKey() {
		return _idConfiguracionPerfilador;
	}

	public void setPrimaryKey(long primaryKey) {
		setIdConfiguracionPerfilador(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_idConfiguracionPerfilador);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ConfiguracionPerfilador.class;
	}

	public String getModelClassName() {
		return ConfiguracionPerfilador.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idConfiguracionPerfilador",
			getIdConfiguracionPerfilador());
		attributes.put("tipoVariable", getTipoVariable());
		attributes.put("nombreVariable", getNombreVariable());
		attributes.put("codigoClasificacion", getCodigoClasificacion());
		attributes.put("codigoVariablePadre", getCodigoVariablePadre());
		attributes.put("valor1", getValor1());
		attributes.put("valor2", getValor2());
		attributes.put("valor3", getValor3());
		attributes.put("estado", getEstado());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idConfiguracionPerfilador = (Long)attributes.get(
				"idConfiguracionPerfilador");

		if (idConfiguracionPerfilador != null) {
			setIdConfiguracionPerfilador(idConfiguracionPerfilador);
		}

		Long tipoVariable = (Long)attributes.get("tipoVariable");

		if (tipoVariable != null) {
			setTipoVariable(tipoVariable);
		}

		String nombreVariable = (String)attributes.get("nombreVariable");

		if (nombreVariable != null) {
			setNombreVariable(nombreVariable);
		}

		Long codigoClasificacion = (Long)attributes.get("codigoClasificacion");

		if (codigoClasificacion != null) {
			setCodigoClasificacion(codigoClasificacion);
		}

		Long codigoVariablePadre = (Long)attributes.get("codigoVariablePadre");

		if (codigoVariablePadre != null) {
			setCodigoVariablePadre(codigoVariablePadre);
		}

		String valor1 = (String)attributes.get("valor1");

		if (valor1 != null) {
			setValor1(valor1);
		}

		String valor2 = (String)attributes.get("valor2");

		if (valor2 != null) {
			setValor2(valor2);
		}

		String valor3 = (String)attributes.get("valor3");

		if (valor3 != null) {
			setValor3(valor3);
		}

		Integer estado = (Integer)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}
	}

	@JSON
	public long getIdConfiguracionPerfilador() {
		return _idConfiguracionPerfilador;
	}

	public void setIdConfiguracionPerfilador(long idConfiguracionPerfilador) {
		_idConfiguracionPerfilador = idConfiguracionPerfilador;
	}

	@JSON
	public Long getTipoVariable() {
		return _tipoVariable;
	}

	public void setTipoVariable(Long tipoVariable) {
		_tipoVariable = tipoVariable;
	}

	@JSON
	public String getNombreVariable() {
		if (_nombreVariable == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombreVariable;
		}
	}

	public void setNombreVariable(String nombreVariable) {
		_nombreVariable = nombreVariable;
	}

	@JSON
	public Long getCodigoClasificacion() {
		return _codigoClasificacion;
	}

	public void setCodigoClasificacion(Long codigoClasificacion) {
		_codigoClasificacion = codigoClasificacion;
	}

	@JSON
	public Long getCodigoVariablePadre() {
		return _codigoVariablePadre;
	}

	public void setCodigoVariablePadre(Long codigoVariablePadre) {
		_codigoVariablePadre = codigoVariablePadre;
	}

	@JSON
	public String getValor1() {
		if (_valor1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _valor1;
		}
	}

	public void setValor1(String valor1) {
		_valor1 = valor1;
	}

	@JSON
	public String getValor2() {
		if (_valor2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _valor2;
		}
	}

	public void setValor2(String valor2) {
		_valor2 = valor2;
	}

	@JSON
	public String getValor3() {
		if (_valor3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _valor3;
		}
	}

	public void setValor3(String valor3) {
		_valor3 = valor3;
	}

	@JSON
	public Integer getEstado() {
		return _estado;
	}

	public void setEstado(Integer estado) {
		_estado = estado;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ConfiguracionPerfilador.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ConfiguracionPerfilador toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ConfiguracionPerfilador)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ConfiguracionPerfiladorImpl configuracionPerfiladorImpl = new ConfiguracionPerfiladorImpl();

		configuracionPerfiladorImpl.setIdConfiguracionPerfilador(getIdConfiguracionPerfilador());
		configuracionPerfiladorImpl.setTipoVariable(getTipoVariable());
		configuracionPerfiladorImpl.setNombreVariable(getNombreVariable());
		configuracionPerfiladorImpl.setCodigoClasificacion(getCodigoClasificacion());
		configuracionPerfiladorImpl.setCodigoVariablePadre(getCodigoVariablePadre());
		configuracionPerfiladorImpl.setValor1(getValor1());
		configuracionPerfiladorImpl.setValor2(getValor2());
		configuracionPerfiladorImpl.setValor3(getValor3());
		configuracionPerfiladorImpl.setEstado(getEstado());

		configuracionPerfiladorImpl.resetOriginalValues();

		return configuracionPerfiladorImpl;
	}

	public int compareTo(ConfiguracionPerfilador configuracionPerfilador) {
		long primaryKey = configuracionPerfilador.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ConfiguracionPerfilador configuracionPerfilador = null;

		try {
			configuracionPerfilador = (ConfiguracionPerfilador)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = configuracionPerfilador.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ConfiguracionPerfilador> toCacheModel() {
		ConfiguracionPerfiladorCacheModel configuracionPerfiladorCacheModel = new ConfiguracionPerfiladorCacheModel();

		configuracionPerfiladorCacheModel.idConfiguracionPerfilador = getIdConfiguracionPerfilador();

		configuracionPerfiladorCacheModel.tipoVariable = getTipoVariable();

		configuracionPerfiladorCacheModel.nombreVariable = getNombreVariable();

		String nombreVariable = configuracionPerfiladorCacheModel.nombreVariable;

		if ((nombreVariable != null) && (nombreVariable.length() == 0)) {
			configuracionPerfiladorCacheModel.nombreVariable = null;
		}

		configuracionPerfiladorCacheModel.codigoClasificacion = getCodigoClasificacion();

		configuracionPerfiladorCacheModel.codigoVariablePadre = getCodigoVariablePadre();

		configuracionPerfiladorCacheModel.valor1 = getValor1();

		String valor1 = configuracionPerfiladorCacheModel.valor1;

		if ((valor1 != null) && (valor1.length() == 0)) {
			configuracionPerfiladorCacheModel.valor1 = null;
		}

		configuracionPerfiladorCacheModel.valor2 = getValor2();

		String valor2 = configuracionPerfiladorCacheModel.valor2;

		if ((valor2 != null) && (valor2.length() == 0)) {
			configuracionPerfiladorCacheModel.valor2 = null;
		}

		configuracionPerfiladorCacheModel.valor3 = getValor3();

		String valor3 = configuracionPerfiladorCacheModel.valor3;

		if ((valor3 != null) && (valor3.length() == 0)) {
			configuracionPerfiladorCacheModel.valor3 = null;
		}

		configuracionPerfiladorCacheModel.estado = getEstado();

		return configuracionPerfiladorCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{idConfiguracionPerfilador=");
		sb.append(getIdConfiguracionPerfilador());
		sb.append(", tipoVariable=");
		sb.append(getTipoVariable());
		sb.append(", nombreVariable=");
		sb.append(getNombreVariable());
		sb.append(", codigoClasificacion=");
		sb.append(getCodigoClasificacion());
		sb.append(", codigoVariablePadre=");
		sb.append(getCodigoVariablePadre());
		sb.append(", valor1=");
		sb.append(getValor1());
		sb.append(", valor2=");
		sb.append(getValor2());
		sb.append(", valor3=");
		sb.append(getValor3());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.ext.portlet.halcon.model.ConfiguracionPerfilador");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idConfiguracionPerfilador</column-name><column-value><![CDATA[");
		sb.append(getIdConfiguracionPerfilador());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoVariable</column-name><column-value><![CDATA[");
		sb.append(getTipoVariable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombreVariable</column-name><column-value><![CDATA[");
		sb.append(getNombreVariable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigoClasificacion</column-name><column-value><![CDATA[");
		sb.append(getCodigoClasificacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigoVariablePadre</column-name><column-value><![CDATA[");
		sb.append(getCodigoVariablePadre());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valor1</column-name><column-value><![CDATA[");
		sb.append(getValor1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valor2</column-name><column-value><![CDATA[");
		sb.append(getValor2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valor3</column-name><column-value><![CDATA[");
		sb.append(getValor3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ConfiguracionPerfilador.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ConfiguracionPerfilador.class
		};
	private long _idConfiguracionPerfilador;
	private Long _tipoVariable;
	private String _nombreVariable;
	private Long _codigoClasificacion;
	private Long _codigoVariablePadre;
	private String _valor1;
	private String _valor2;
	private String _valor3;
	private Integer _estado;
	private ConfiguracionPerfilador _escapedModelProxy;
}