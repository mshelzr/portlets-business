/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ext.portlet.halcon.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AuditoriaSimulador service. Represents a row in the &quot;T_AUDITORIA_SIMULADOR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ext.portlet.halcon.model.impl.AuditoriaSimuladorModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ext.portlet.halcon.model.impl.AuditoriaSimuladorImpl}.
 * </p>
 *
 * @author Infonet-Consulting
 * @see AuditoriaSimulador
 * @see com.ext.portlet.halcon.model.impl.AuditoriaSimuladorImpl
 * @see com.ext.portlet.halcon.model.impl.AuditoriaSimuladorModelImpl
 * @generated
 */
public interface AuditoriaSimuladorModel extends BaseModel<AuditoriaSimulador> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a auditoria simulador model instance should use the {@link AuditoriaSimulador} interface instead.
	 */

	/**
	 * Returns the primary key of this auditoria simulador.
	 *
	 * @return the primary key of this auditoria simulador
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this auditoria simulador.
	 *
	 * @param primaryKey the primary key of this auditoria simulador
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the id auditoria sim of this auditoria simulador.
	 *
	 * @return the id auditoria sim of this auditoria simulador
	 */
	public long getIdAuditoriaSim();

	/**
	 * Sets the id auditoria sim of this auditoria simulador.
	 *
	 * @param idAuditoriaSim the id auditoria sim of this auditoria simulador
	 */
	public void setIdAuditoriaSim(long idAuditoriaSim);

	/**
	 * Returns the tipo simulador of this auditoria simulador.
	 *
	 * @return the tipo simulador of this auditoria simulador
	 */
	@AutoEscape
	public String getTipoSimulador();

	/**
	 * Sets the tipo simulador of this auditoria simulador.
	 *
	 * @param tipoSimulador the tipo simulador of this auditoria simulador
	 */
	public void setTipoSimulador(String tipoSimulador);

	/**
	 * Returns the id transaccion of this auditoria simulador.
	 *
	 * @return the id transaccion of this auditoria simulador
	 */
	@AutoEscape
	public String getIdTransaccion();

	/**
	 * Sets the id transaccion of this auditoria simulador.
	 *
	 * @param idTransaccion the id transaccion of this auditoria simulador
	 */
	public void setIdTransaccion(String idTransaccion);

	/**
	 * Returns the tipo documento of this auditoria simulador.
	 *
	 * @return the tipo documento of this auditoria simulador
	 */
	@AutoEscape
	public String getTipoDocumento();

	/**
	 * Sets the tipo documento of this auditoria simulador.
	 *
	 * @param tipoDocumento the tipo documento of this auditoria simulador
	 */
	public void setTipoDocumento(String tipoDocumento);

	/**
	 * Returns the num documento of this auditoria simulador.
	 *
	 * @return the num documento of this auditoria simulador
	 */
	@AutoEscape
	public String getNumDocumento();

	/**
	 * Sets the num documento of this auditoria simulador.
	 *
	 * @param numDocumento the num documento of this auditoria simulador
	 */
	public void setNumDocumento(String numDocumento);

	/**
	 * Returns the moneda of this auditoria simulador.
	 *
	 * @return the moneda of this auditoria simulador
	 */
	@AutoEscape
	public String getMoneda();

	/**
	 * Sets the moneda of this auditoria simulador.
	 *
	 * @param moneda the moneda of this auditoria simulador
	 */
	public void setMoneda(String moneda);

	/**
	 * Returns the tipo producto of this auditoria simulador.
	 *
	 * @return the tipo producto of this auditoria simulador
	 */
	@AutoEscape
	public String getTipoProducto();

	/**
	 * Sets the tipo producto of this auditoria simulador.
	 *
	 * @param tipoProducto the tipo producto of this auditoria simulador
	 */
	public void setTipoProducto(String tipoProducto);

	/**
	 * Returns the invirtio fond mut of this auditoria simulador.
	 *
	 * @return the invirtio fond mut of this auditoria simulador
	 */
	@AutoEscape
	public String getInvirtioFondMut();

	/**
	 * Sets the invirtio fond mut of this auditoria simulador.
	 *
	 * @param invirtioFondMut the invirtio fond mut of this auditoria simulador
	 */
	public void setInvirtioFondMut(String invirtioFondMut);

	/**
	 * Returns the nivel conocim fond mut of this auditoria simulador.
	 *
	 * @return the nivel conocim fond mut of this auditoria simulador
	 */
	@AutoEscape
	public String getNivelConocimFondMut();

	/**
	 * Sets the nivel conocim fond mut of this auditoria simulador.
	 *
	 * @param nivelConocimFondMut the nivel conocim fond mut of this auditoria simulador
	 */
	public void setNivelConocimFondMut(String nivelConocimFondMut);

	/**
	 * Returns the reaccion var merc of this auditoria simulador.
	 *
	 * @return the reaccion var merc of this auditoria simulador
	 */
	@AutoEscape
	public String getReaccionVarMerc();

	/**
	 * Sets the reaccion var merc of this auditoria simulador.
	 *
	 * @param reaccionVarMerc the reaccion var merc of this auditoria simulador
	 */
	public void setReaccionVarMerc(String reaccionVarMerc);

	/**
	 * Returns the valor bien of this auditoria simulador.
	 *
	 * @return the valor bien of this auditoria simulador
	 */
	public Double getValorBien();

	/**
	 * Sets the valor bien of this auditoria simulador.
	 *
	 * @param valorBien the valor bien of this auditoria simulador
	 */
	public void setValorBien(Double valorBien);

	/**
	 * Returns the monto prestamo of this auditoria simulador.
	 *
	 * @return the monto prestamo of this auditoria simulador
	 */
	public Double getMontoPrestamo();

	/**
	 * Sets the monto prestamo of this auditoria simulador.
	 *
	 * @param montoPrestamo the monto prestamo of this auditoria simulador
	 */
	public void setMontoPrestamo(Double montoPrestamo);

	/**
	 * Returns the cuota inicial of this auditoria simulador.
	 *
	 * @return the cuota inicial of this auditoria simulador
	 */
	public Double getCuotaInicial();

	/**
	 * Sets the cuota inicial of this auditoria simulador.
	 *
	 * @param cuotaInicial the cuota inicial of this auditoria simulador
	 */
	public void setCuotaInicial(Double cuotaInicial);

	/**
	 * Returns the periodo invers of this auditoria simulador.
	 *
	 * @return the periodo invers of this auditoria simulador
	 */
	@AutoEscape
	public String getPeriodoInvers();

	/**
	 * Sets the periodo invers of this auditoria simulador.
	 *
	 * @param periodoInvers the periodo invers of this auditoria simulador
	 */
	public void setPeriodoInvers(String periodoInvers);

	/**
	 * Returns the tasa of this auditoria simulador.
	 *
	 * @return the tasa of this auditoria simulador
	 */
	public Double getTasa();

	/**
	 * Sets the tasa of this auditoria simulador.
	 *
	 * @param tasa the tasa of this auditoria simulador
	 */
	public void setTasa(Double tasa);

	/**
	 * Returns the seg desgrav of this auditoria simulador.
	 *
	 * @return the seg desgrav of this auditoria simulador
	 */
	@AutoEscape
	public String getSegDesgrav();

	/**
	 * Sets the seg desgrav of this auditoria simulador.
	 *
	 * @param segDesgrav the seg desgrav of this auditoria simulador
	 */
	public void setSegDesgrav(String segDesgrav);

	/**
	 * Returns the tipo cuota of this auditoria simulador.
	 *
	 * @return the tipo cuota of this auditoria simulador
	 */
	@AutoEscape
	public String getTipoCuota();

	/**
	 * Sets the tipo cuota of this auditoria simulador.
	 *
	 * @param tipoCuota the tipo cuota of this auditoria simulador
	 */
	public void setTipoCuota(String tipoCuota);

	/**
	 * Returns the i p of this auditoria simulador.
	 *
	 * @return the i p of this auditoria simulador
	 */
	@AutoEscape
	public String getIP();

	/**
	 * Sets the i p of this auditoria simulador.
	 *
	 * @param IP the i p of this auditoria simulador
	 */
	public void setIP(String IP);

	/**
	 * Returns the fecha hora of this auditoria simulador.
	 *
	 * @return the fecha hora of this auditoria simulador
	 */
	public Date getFechaHora();

	/**
	 * Sets the fecha hora of this auditoria simulador.
	 *
	 * @param fechaHora the fecha hora of this auditoria simulador
	 */
	public void setFechaHora(Date fechaHora);

	/**
	 * Returns the u t m source of this auditoria simulador.
	 *
	 * @return the u t m source of this auditoria simulador
	 */
	@AutoEscape
	public String getUTMSource();

	/**
	 * Sets the u t m source of this auditoria simulador.
	 *
	 * @param UTMSource the u t m source of this auditoria simulador
	 */
	public void setUTMSource(String UTMSource);

	/**
	 * Returns the u t m medium of this auditoria simulador.
	 *
	 * @return the u t m medium of this auditoria simulador
	 */
	@AutoEscape
	public String getUTMMedium();

	/**
	 * Sets the u t m medium of this auditoria simulador.
	 *
	 * @param UTMMedium the u t m medium of this auditoria simulador
	 */
	public void setUTMMedium(String UTMMedium);

	/**
	 * Returns the u t m campaing of this auditoria simulador.
	 *
	 * @return the u t m campaing of this auditoria simulador
	 */
	@AutoEscape
	public String getUTMCampaing();

	/**
	 * Sets the u t m campaing of this auditoria simulador.
	 *
	 * @param UTMCampaing the u t m campaing of this auditoria simulador
	 */
	public void setUTMCampaing(String UTMCampaing);

	/**
	 * Returns the u t m content of this auditoria simulador.
	 *
	 * @return the u t m content of this auditoria simulador
	 */
	@AutoEscape
	public String getUTMContent();

	/**
	 * Sets the u t m content of this auditoria simulador.
	 *
	 * @param UTMContent the u t m content of this auditoria simulador
	 */
	public void setUTMContent(String UTMContent);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(AuditoriaSimulador auditoriaSimulador);

	public int hashCode();

	public CacheModel<AuditoriaSimulador> toCacheModel();

	public AuditoriaSimulador toEscapedModel();

	public String toString();

	public String toXmlString();
}